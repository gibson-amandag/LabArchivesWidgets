my_widget_script={init:function(mode,json_data){
var parsedJson=this.parseInitJson(json_data)
;this.initDynamicContent(parsedJson),
window.onresize=this.resize,this.addEventListeners(),
this.parent_class.init(mode,()=>JSON.stringify(parsedJson.widgetData)),
this.addRequiredFieldIndicators(),
this.setUpInitialState(),this.adjustForMode(mode)
},to_json:function(){
var widgetJsonString=this.parent_class.to_json(),dynamicContent=this.getDynamicContent(),output={
widgetData:JSON.parse(widgetJsonString),
dam1Plug_addedRows:dynamicContent.dam1Plug_addedRows,
dam2Plug_addedRows:dynamicContent.dam2Plug_addedRows,
dam1Mass_addedRows:dynamicContent.dam1Mass_addedRows,
dam2Mass_addedRows:dynamicContent.dam2Mass_addedRows
};return JSON.stringify(output)},
from_json:function(json_data){
var parsedJson=JSON.parse(json_data)
;this.parent_class.from_json(JSON.stringify(parsedJson.widgetData))
},test_data:function(){
var testData=JSON.parse(this.parent_class.test_data()),output={
widgetData:testData,dam1Plug_addedRows:1,
dam2Plug_addedRows:2,dam1Mass_addedRows:3,
dam2Mass_addedRows:4}
;return JSON.stringify(output)},
is_valid:function(b_suppress_message){
var fail=false,fail_log="",name
;if($("#the_form").find("select, textarea, input").each(function(){
if(!$(this).prop("required"));else if(!$(this).val())fail=true,
name=$(this).attr("id"),
fail_log+=name+" is required \n"
}),$("input[type='date']").each(function(){
var date=$(this).val();if(date){
var validDate=my_widget_script.isValidDate(date)
;if(!validDate)fail=true,fail_log+="Please enter valid date in form 'YYYY-MM-DD'"
}}),$("input[type='time']").each(function(){
var time=$(this).val();if(time){
var validtime=my_widget_script.isValidTime(time)
;if(!validtime)fail=true,fail_log+="Please enter valid time in form 'hh:mm' - 24 hr time"
}}),fail)return alert(fail_log);else{
var noErrors=[];return noErrors}},
is_edited:function(){
return this.parent_class.is_edited()},
reset_edited:function(){
return this.parent_class.reset_edited()},
parseInitJson:function(json_data){var jsonString
;if("string"===typeof json_data)jsonString=json_data;else jsonString=json_data()
;var parsedJson=JSON.parse(jsonString)
;return parsedJson},
initDynamicContent:function(parsedJson){
for(var i=0;i<parsedJson.dam1Plug_addedRows;i++){
var tableName=$("#dam1PlugTable"),whichDam="dam1"
;my_widget_script.createPlugCheckRow(tableName,whichDam)
}for(var i=0;i<parsedJson.dam2Plug_addedRows;i++){
var tableName=$("#dam2PlugTable"),whichDam="dam2"
;my_widget_script.createPlugCheckRow(tableName,whichDam)
}for(var i=0;i<parsedJson.dam1Mass_addedRows;i++){
var tableName=$("#dam1MassTable"),whichDam="dam1"
;my_widget_script.createMassRow(tableName,whichDam,$("#dammass_1"))
}for(var i=0;i<parsedJson.dam2Mass_addedRows;i++){
var tableName=$("#dam2MassTable"),whichDam="dam2"
;my_widget_script.createMassRow(tableName,whichDam,$("#dammass_2"))
}},adjustForMode:function(mode){
if("edit"!==mode&&"edit_dev"!==mode)$(".disableOnView").prop("disabled",true);else if($("#breedDate").val())$(".entry").insertAfter($(".myTitle"))
},addEventListeners:function(){
$("#dam2Check").on("change",function(){
if($(this).is(":checked"))$(".dam2").show(),
$("#sireDiv").removeClass("mt-md-0").addClass("mt-xl-0");else $(".dam2").hide(),
$("#sireDiv").addClass("mt-md-0").removeClass("mt-xl-0")
;my_widget_script.adjustForDaysPostBreedingAndPlug(),
my_widget_script.resize()
}),$("#damid_1").on("input",function(){
my_widget_script.watchValue($("#damid_1"),$(".dam1_calc")),
my_widget_script.resize()
}),$("#damid_2").on("input",function(){
my_widget_script.watchValue($("#damid_2"),$(".dam2_calc")),
my_widget_script.resize()
}),$("#dammass_1").on("input",function(){
$(".newMass_dam1").each(function(){
my_widget_script.calcPercMass($(this),$("#dammass_1"))
})}),$("#dammass_2").on("input",function(){
$(".newMass_dam2").each(function(){
my_widget_script.calcPercMass($(this),$("#dammass_2"))
})}),$("#addPlugCheck1").on("click",function(){
var tableName=$("#dam1PlugTable"),whichDam="dam1"
;my_widget_script.createPlugCheckRow(tableName,whichDam)
}),$("#removePlugCheck1").on("click",function(){
var tableName=$("#dam1PlugTable")
;my_widget_script.deleteRow(tableName),my_widget_script.adjustForDaysPostBreedingAndPlug()
}),$("#addPlugCheck2").on("click",function(){
var tableName=$("#dam2PlugTable"),whichDam="dam2"
;my_widget_script.createPlugCheckRow(tableName,whichDam)
}),$("#removePlugCheck2").on("click",function(){
var tableName=$("#dam2PlugTable")
;my_widget_script.deleteRow(tableName),my_widget_script.adjustForDaysPostBreedingAndPlug()
}),$("#addMass1").on("click",function(){
var tableName=$("#dam1MassTable"),whichDam="dam1"
;my_widget_script.createMassRow(tableName,whichDam,$("#dammass_1"))
}),$("#removeMass1").on("click",function(){
var tableName=$("#dam1MassTable")
;my_widget_script.deleteRow(tableName)
}),$("#addMass2").on("click",function(){
var tableName=$("#dam2MassTable"),whichDam="dam2"
;my_widget_script.createMassRow(tableName,whichDam,$("#dammass_2"))
}),$("#removeMass2").on("click",function(){
var tableName=$("#dam2MassTable")
;my_widget_script.deleteRow(tableName)
}),$("#breedDate").on("input",function(){
my_widget_script.adjustForDaysPostBreedingAndPlug()
}),$(".updateWatch").on("input",function(){
my_widget_script.adjustForDaysPostBreedingAndPlug()
})},addRequiredFieldIndicators:function(){
$("#the_form").find("select, textarea, input").each(function(){
if($(this).prop("required"))$(this).after("<span style='color:red'>*</span>")
})},updateTextarea:function(){
$("textarea").each(function(){
if(!$(this).is(":hidden"))this.setAttribute("style","height:"+this.scrollHeight+"px;overflow-y:hidden;")
}),my_widget_script.resize()},
isValidTime:function(timeString){
var regEx="^(((([0-1][0-9])|(2[0-3])):[0-5][0-9]))$"
;if(!timeString.match(regEx))return false;else return true
},isTimeSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","time")
;var supported=true
;if("time"!==input.type)supported=false
;return my_widget_script.timeSupported=supported,
supported},timeSupported:true,
checkTimeFormat:function($timeInput){
if(!my_widget_script.timeSupported){
$timeInput.next(".timeWarning").remove()
;var time=$timeInput.val(),isValid=my_widget_script.isValidTime(time)
;if(!isValid)$timeInput.after('<div class="text-danger timeWarning">Enter time as "hh:mm" in 24-hr format</div>')
}},isValidDate:function(dateString){
var regEx=/^\d{4}-\d{2}-\d{2}$/
;if(!dateString.match(regEx))return false
;var d=new Date(dateString),dNum=d.getTime()
;if(!dNum&&0!==dNum)return false
;return d.toISOString().slice(0,10)===dateString},
isDateSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","date")
;var supported=true
;if("date"!==input.type)supported=false
;return my_widget_script.dateSupported=supported,
supported},dateSupported:true,
checkDateFormat:function($dateInput){
if(!my_widget_script.dateSupported){
$dateInput.next(".dateWarning").remove()
;var date=$dateInput.val(),isValid=my_widget_script.isValidDate(date)
;if(!isValid)$dateInput.after('<div class="text-danger dateWarning">Enter date as "YYYY-MM-DD"</div>')
;$dateInput.datepicker({dateFormat:"yy-mm-dd"
}),console.log($dateInput.val())}},
setUpInitialState:function(){
if(my_widget_script.isDateSupported(),my_widget_script.isTimeSupported(),
$("input[type='date']").prop("placeholder","YYYY-MM-DD").on("change",function(){
my_widget_script.checkDateFormat($(this))
}).each(function(){
my_widget_script.checkDateFormat($(this))
}),$("input[type='time']").prop("placeholder","hh:mm").on("change",function(){
my_widget_script.checkTimeFormat($(this))
}).each(function(){
my_widget_script.checkTimeFormat($(this))
}),$(".myLeftCol").addClass("col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"),
$("textarea").on("input",function(){
this.style.height="auto",this.style.height=this.scrollHeight+"px",
my_widget_script.resize()
}),$(".checkText").on("change",function(){
my_widget_script.updateTextarea()
}),$("#dam2Check").is(":checked"))$(".dam2").show(),
$("#sireDiv").removeClass("mt-md-0").addClass("mt-xl-0");else $(".dam2").hide(),
$("#sireDiv").addClass("mt-md-0").removeClass("mt-xl-0")
;my_widget_script.watchValue($("#damid_1"),$(".dam1_calc")),
my_widget_script.watchValue($("#damid_2"),$(".dam2_calc")),
$(".newMass_dam1").each(function(){
my_widget_script.calcPercMass($(this),$("#dammass_1"))
}),$(".newMass_dam2").each(function(){
my_widget_script.calcPercMass($(this),$("#dammass_2"))
}),my_widget_script.adjustForDaysPostBreedingAndPlug(),
my_widget_script.updateTextarea(),
my_widget_script.resize()},resize:function(){
my_widget_script.parent_class.resize_container()},
getDynamicContent:function(){
var dam1Plug_addedRows=$("#dam1PlugTable").find("tbody tr").length,dam2Plug_addedRows=$("#dam2PlugTable").find("tbody tr").length,dam1Mass_addedRows=$("#dam1MassTable").find("tbody tr").length,dam2Mass_addedRows=$("#dam2MassTable").find("tbody tr").length,dynamicContent={
dam1Plug_addedRows:dam1Plug_addedRows,
dam2Plug_addedRows:dam2Plug_addedRows,
dam1Mass_addedRows:dam1Mass_addedRows,
dam2Mass_addedRows:dam2Mass_addedRows}
;return dynamicContent},
data_valid_form:function(){var valid=true
;if($(".needForTable").each(function(){
if(!$(this).val())valid=false
}),!valid)$("#errorMsg").html("<span style='color:red; font-size:36px;'>Please fill out all elements marked by a</span><span style='color:blue; font-size:36px;'> blue #</span>");else $("#errorMsg").html("")
;return valid},
watchValue:function($elToWatch,$elToUpdate){
var value=$elToWatch.val();$elToUpdate.text(value)
},createPlugCheckRow:function(tableName,whichDam){
var rowCount=$(tableName).find("tbody tr").length+1,rowID=whichDam+"_row_"+rowCount,col1ID=whichDam+"date_"+rowCount,col2ID=whichDam+"_qual_"+rowCount,col3ID=whichDam+"_comment_"+rowCount
;$(tableName).find("tbody").append($("<tr></tr>",{
id:rowID
}).append($("<td></td>").append($("<input/>",{
id:col1ID,name:col1ID,type:"date",
class:"plugDate",placeholder:"hh:mm"
}).each(function(){
my_widget_script.checkDateFormat()
}).on("change",function(){
my_widget_script.checkDateFormat(),my_widget_script.adjustForDaysPostBreedingAndPlug()
}))).append($("<td></td>").append($("<select></select>",{
id:col2ID,name:col2ID,class:"plugStatus"
}).append("<option value='0'>-/-</option>","<option value='1'>?</option>","<option value='2'>+/-</option>","<option value='3'>+/+</option>","<option value='4'>Red</option>","<option value='5'>Closed VO</option>").on("change",function(){
my_widget_script.adjustForDaysPostBreedingAndPlug()
}))).append($("<td></td>").append($("<text"+"area></text"+"area>",{
id:col3ID,name:col3ID,rows:1,cols:12
}).css("height",this.scrollHeight+"px").css("overflow-y","hidden").on("input",function(){
this.style.height="auto",
this.style.height=this.scrollHeight+"px"
})))),my_widget_script.parent_class.resize_container()
},
createMassRow:function(tableName,whichDam,initMass){
var rowCount=$(tableName).find("tbody tr").length+1,rowID=whichDam+"_row_"+rowCount,col1ID=whichDam+"_massdate_"+rowCount,col2ID=whichDam+"_mass_"+rowCount
;$(tableName).find("tbody").append($("<tr></tr>",{
id:rowID
}).append($("<td></td>").append($("<input/>",{
id:col1ID,name:col1ID,type:"date",
placeholder:"hh:mm"}).each(function(){
my_widget_script.checkDateFormat()
}).on("change",function(){
my_widget_script.checkDateFormat(),my_widget_script.adjustForDaysPostBreedingAndPlug()
}))).append($("<td></td>").append($("<input/>",{
id:col2ID,name:col2ID,type:"number",step:"0.1",
min:"0",width:"4em",class:"newMass_"+whichDam
}).on("input",function(){
my_widget_script.calcPercMass($(this),initMass)
}))).append($("<td></td>",{class:"change"
}))),my_widget_script.parent_class.resize_container()
},deleteRow:function(tableName){
var lastRow=$(tableName).find("tbody tr").last()
;$(lastRow).remove(),my_widget_script.parent_class.resize_container()
},calcPercMass:function(newMass,initMass){
var newMassVal=parseFloat($(newMass).val()),initMassVal=parseFloat($(initMass).val())
;if(newMassVal>0&&initMassVal>0){
var percChange=newMassVal/initMassVal*100
;$(newMass).parent().next(".change").text(percChange.toFixed(1))
}else if(!newMassVal>0)$(newMass).parent().next(".change").text("Enter New Mass");else $(newMass).parent().next(".change").text("Enter Initial Mass")
;my_widget_script.resize()},
addDays:function($startDateVal,$newDateClass,numDays){
var newDate=luxon.DateTime.fromISO($startDateVal).plus({
days:numDays
}).toLocaleString(luxon.DateTime.DATE_HUGE)
;$newDateClass.text(newDate)},
watchForPlug:function(whichDam){
var hasPotentialPlug=false,thisGestDayAtPotentialPlug,thisPlugPotentialDate,gestDayAtPotentialPlug,dateAtPotentialPlug,hasLikelyPlug=false,thisGestDayAtLikelyPlug,thisPlugLikelyDate,gestDayAtLikelyPlug,dateAtLikelyPlug,hasGoodPlug=false,thisGestDayAtGoodPlug,thisPlugGoodDate,gestDayAtGoodPlug,dateAtGoodPlug,dataSearch=my_widget_script.dataSearch("dam",whichDam)
;$(".table.plug"+dataSearch).find(".plugStatus").each(function(){
var $this=$(this)
;if("1"===$this.val()||"2"===$this.val()||"3"===$this.val())if(hasPotentialPlug=true,
thisPlugPotentialDate=$this.closest("tr").find(".plugDate").val(),
thisGestDayAtPotentialPlug=my_widget_script.getGestDay(thisPlugPotentialDate),
dateAtPotentialPlug){
if(new Date(thisPlugPotentialDate).getTime()<new Date(dateAtPotentialPlug).getTime())dateAtPotentialPlug=thisPlugPotentialDate,
gestDayAtPotentialPlug=thisGestDayAtPotentialPlug
}else dateAtPotentialPlug=thisPlugPotentialDate,
gestDayAtPotentialPlug=thisGestDayAtPotentialPlug
;if("2"===$this.val()||"3"===$this.val())if(hasLikelyPlug=true,
thisPlugLikelyDate=$this.closest("tr").find(".plugDate").val(),
thisGestDayAtLikelyPlug=my_widget_script.getGestDay(thisPlugLikelyDate),
dateAtLikelyPlug){
if(new Date(thisPlugLikelyDate).getTime()<new Date(dateAtLikelyPlug).getTime())dateAtLikelyPlug=thisPlugLikelyDate,
gestDayAtLikelyPlug=thisGestDayAtLikelyPlug
}else dateAtLikelyPlug=thisPlugLikelyDate,
gestDayAtLikelyPlug=thisGestDayAtLikelyPlug
;if("3"===$this.val())if(hasGoodPlug=true,
thisPlugGoodDate=$this.closest("tr").find(".plugDate").val(),
thisGestDayAtGoodPlug=my_widget_script.getGestDay(thisPlugGoodDate),
dateAtGoodPlug){
if(new Date(thisPlugGoodDate).getTime()<new Date(dateAtGoodPlug).getTime())dateAtGoodPlug=thisPlugGoodDate,
gestDayAtGoodPlug=thisGestDayAtGoodPlug
}else dateAtGoodPlug=thisPlugGoodDate,gestDayAtGoodPlug=thisGestDayAtGoodPlug
});var plugDates={
hasPotentialPlug:hasPotentialPlug,
earliestPotential:dateAtPotentialPlug,
hasLikelyPlug:hasLikelyPlug,
earliestLikely:dateAtLikelyPlug,
hasGoodPlug:hasGoodPlug,
earliestGood:dateAtGoodPlug};return plugDates},
dataSearch:function(dataName,dataValue){
var dataSearch="[data-"+dataName+"='"+dataValue+"']"
;return dataSearch},
adjustForDaysPostBreedingAndPlug:function(){
if($("#breedDate").val()){
var daysPostBreeding=my_widget_script.getDaysPostEvent($("#breedDate").val())
;if($(".postBreedDays").text(daysPostBreeding),
my_widget_script.addDays($("#breedDate").val(),$(".bd12"),12),
my_widget_script.addDays($("#breedDate").val(),$(".bd19"),19),
12===daysPostBreeding)$(".bd12").parent().andSelf().css("color","red");else if(daysPostBreeding>12)$(".bd12").parent().andSelf().css("color","blue");else $(".bd12").parent().andSelf().css("color","black")
;if(19===daysPostBreeding)$(".bd19").parent().andSelf().css("color","red");else if(daysPostBreeding>=19)$(".bd19").parent().andSelf().css("color","blue");else $(".bd19").parent().andSelf().css("color","black")
}else $(".postBreedDays").text("[Enter breed date]"),
$(".bd12").text("[Enter breed date]").parent().andSelf().css("color","black"),
$(".bd19").text("[Enter breed date]").parent().andSelf().css("color","black")
;if($("#dam2Check").is(":checked"))var max=2;else var max=1
;for(i=0;i<max;i++){damNum=""+(i+1)
;var plugDates=my_widget_script.watchForPlug(damNum),dataSearch=my_widget_script.dataSearch("dam",damNum)
;if(plugDates.hasPotentialPlug)if($(".ifPlug"+dataSearch).show(),
plugDates.earliestPotential){
var daysEarliestPotentialPlug=my_widget_script.getDaysPostEvent(plugDates.earliestPotential)
;if($(".postEarliestPotentialPlug"+dataSearch).text(daysEarliestPotentialPlug),
my_widget_script.addDays(plugDates.earliestPotential,$(".plug11"+dataSearch),11),
my_widget_script.addDays(plugDates.earliestPotential,$(".plug18"+dataSearch),18),
11===daysEarliestPotentialPlug)$(".plug11"+dataSearch).parent().andSelf().css("color","red");else if(daysEarliestPotentialPlug>11)if($("#sepDam"+damNum).is(":not(:checked)"))$(".plug11"+dataSearch).parent().andSelf().css("color","blue");else $(".plug11"+dataSearch).parent().andSelf().css("color","black");else $(".plug11"+dataSearch).parent().andSelf().css("color","black")
;if(18===daysEarliestPotentialPlug)$(".plug18"+dataSearch).parent().andSelf().css("color","red");else if(daysEarliestPotentialPlug>=18)if($("#birthDam"+damNum).is(":not(:checked)"))$(".plug18"+dataSearch).parent().andSelf().css("color","blue"),
$(".ifBirth"+dataSearch).hide();else $(".plug18"+dataSearch).parent().andSelf().css("color","black"),
$(".ifBirth"+dataSearch).show();else $(".plug18"+dataSearch).parent().andSelf().css("color","black")
}else $(".postEarliestPotentialPlug"+dataSearch).text("[enter plug date]"),
$(".plug11"+dataSearch).text("[enter plug date]").children().andSelf().css("color","black"),
$(".plug18"+dataSearch).text("[enter plug date]").children().andSelf().css("color","black");else $(".ifPlug"+dataSearch).hide(),
$(".postEarliestPotentialPlug"+dataSearch).text("[enter plug date]"),
$(".plug11"+dataSearch).text("[enter plug date]").children().andSelf().css("color","black"),
$(".plug18"+dataSearch).text("[enter plug date]").children().andSelf().css("color","black")
;if(plugDates.hasLikelyPlug)if($(".ifLikelyPlug"+dataSearch).show(),
plugDates.earliestLikely){
var daysEarliestLikelyPlug=my_widget_script.getDaysPostEvent(plugDates.earliestLikely)
;$(".postEarliestLikelyPlug"+dataSearch).text(daysEarliestLikelyPlug)
}else $(".postEarliestLikelyPlug"+dataSearch).text("[enter plug date]");else $(".ifLikelyPlug"+dataSearch).hide(),
$(".postEarliestLikelyPlug"+dataSearch).text("[enter plug date]")
;if(plugDates.hasGoodPlug)if($(".ifGoodPlug"+dataSearch).show(),
plugDates.earliestGood){
var daysEarliestGoodPlug=my_widget_script.getDaysPostEvent(plugDates.earliestGood)
;$(".postEarliestGoodPlug"+dataSearch).text(daysEarliestGoodPlug)
}else $(".postEarliestGoodPlug"+dataSearch).text("[enter plug date]");else $(".ifGoodPlug"+dataSearch).hide(),
$(".postEarliestGoodPlug"+dataSearch).text("[enter plug date]")
;if($("#sepDam"+damNum).is(":not(:checked)"))$(".ifSep"+dataSearch).hide();else $(".ifSep"+dataSearch).show()
;if($("#birthDam"+damNum).is(":not(:checked)"))$(".ifBirth"+dataSearch).hide();else $(".ifBirth"+dataSearch).show()
}my_widget_script.resize()},
getDaysPostEvent:function($originDateVal){
if($originDateVal){
var startDate=luxon.DateTime.fromISO($originDateVal).startOf("day"),todayDate=luxon.DateTime.now().startOf("day"),dateDiff_days=todayDate.diff(startDate,"days").as("day")
;return dateDiff_days}},
getGestDay:function(dateInputVal){
var breedDateisDay=0,textOutput
;if($("#breedDate").val())if(dateInputVal){
var compDate=luxon.DateTime.fromISO(dateInputVal).startOf("day"),breedDate=luxon.DateTime.fromISO($("#breedDate").val()).startOf("day").minus({
days:breedDateisDay
}),gestDay=compDate.diff(breedDate,"days").as("day")
;textOutput=gestDay
}else textOutput="[Enter Date of Plug Check]";else textOutput="[Enter Breed Date]"
;return textOutput},getLocalDateString:function(){
var dateTodayString=luxon.DateTime.now().toISODate()
;return dateTodayString}};