my_widget_script={numChannels:0,imageNums:[],
images:{},init:function(mode,json_data){
var parsedJson=this.parseInitJson(json_data)
;this.initDynamicContent(parsedJson),
window.onresize=(()=>this.resize()),this.addEventListeners(),
this.parent_class.init(mode,()=>JSON.stringify(parsedJson.widgetData))
;for(var numImages=this.imageNums.length,i=0;i<numImages;i++){
var imgNum=this.imageNums[i]
;if(this.updateFileName(imgNum),!this.images[imgNum])this.images[imgNum]={
addImages:[]}
;if(this.images[imgNum].addImages)for(var j=0;j<this.images[imgNum].addImages.length;j++){
var addImageNum=this.images[imgNum].addImages[j]
;this.makeAnalysisImageRows(imgNum,addImageNum)}}
this.parent_class.init(mode,()=>JSON.stringify(parsedJson.widgetData))
;var numChannels=3
;if(parsedJson.numChannels)numChannels=parsedJson.numChannels
;$("#numChannels").val(numChannels),
this.addRequiredFieldIndicators(),this.setUpInitialState(),
this.adjustForMode(mode),this.checkForNames()},
to_json:function(){
var widgetJsonString=this.parent_class.to_json(),dynamicContent=this.getDynamicContent(),output={
widgetData:JSON.parse(widgetJsonString),
numChannels:this.numChannels,
imageNums:this.imageNums,images:this.images}
;return JSON.stringify(output)},
from_json:function(json_data){
var parsedJson=JSON.parse(json_data)
;this.parent_class.from_json(JSON.stringify(parsedJson.widgetData))
},test_data:function(){
var testData=JSON.parse(this.parent_class.test_data()),output={
widgetData:testData,numChannels:1,imageNums:[1],
images:{1:{addImages:[1]}}}
;return JSON.stringify(output)},
is_valid:function(b_suppress_message){
var fail=false,fail_log="",name
;if($("#the_form").find("select, textarea, input").each((i,e)=>{
if(!$(e).prop("required"));else if(!$(e).val())fail=true,
name=$(e).attr("id"),fail_log+=name+" is required \n"
}),$("input[type='date']").each((i,e)=>{
var date=$(e).val();if(date){
var validDate=this.isValidDate(date)
;if(!validDate)fail=true,fail_log+="Please enter valid date in form 'YYYY-MM-DD'"
}}),$("input[type='time']").each((i,e)=>{
var time=$(e).val();if(time){
var validtime=this.isValidTime(time)
;if(!validtime)fail=true,fail_log+="Please enter valid time in form 'hh:mm' - 24 hr time"
}}),fail)return bootbox.alert(fail_log);else{
var noErrors=[];return noErrors}},
is_edited:function(){
return this.parent_class.is_edited()},
reset_edited:function(){
return this.parent_class.reset_edited()},
parseInitJson:function(json_data){var jsonString
;if("string"===typeof json_data)jsonString=json_data;else jsonString=json_data()
;var parsedJson=JSON.parse(jsonString)
;return parsedJson},
initDynamicContent:function(parsedJson){
var numChannels=3
;if(parsedJson.numChannels)numChannels=parsedJson.numChannels
;if(this.updateChannels(numChannels),
parsedJson.imageNums)for(var i=0;i<parsedJson.imageNums.length;i++)image=parsedJson.imageNums[i],
this.imageNums.push(image),
this.makeImageCard(image);else this.imageNums=[]
;if(parsedJson.images)this.images=parsedJson.images;else for(var i=0;i<this.imageNums.length;i++)image=parsedJson.imageNums[i],
this.images[image]={}},
adjustForMode:function(mode){
if("edit"!==mode&&"edit_dev"!==mode)$(".disableOnView").prop("disabled",true),
$("input[type='date']").removeClass(".hasDatePicker"),
$(".hideView").hide();else $("input[type='date']").each((i,e)=>{
this.checkDateFormat($(e))
}),$("input[type='time']").each((i,e)=>{
this.checkTimeFormat($(e))}),$(".hideEdit").hide()
},addEventListeners:function(){},
addRequiredFieldIndicators:function(){
$(".needForTableLab").each((i,e)=>{
$(e).html("<span class='hideView' style='color:blue'>#</span>"+$(e).html())
}),$(".requiredLab").each((i,e)=>{
$(e).html("<span class='hideView' style='color:red'>*</span>"+$(e).html())
})},isValidTime:function(timeString){
var regEx="^(((([0-1][0-9])|(2[0-3])):[0-5][0-9]))$"
;if(!timeString.match(regEx))return false;else return true
},isTimeSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","time")
;var supported=true
;if("time"!==input.type)supported=false
;return this.timeSupported=supported,input.remove(),
supported},timeSupported:true,
checkTimeFormat:function($timeInput){
if(!this.timeSupported){
$timeInput.next(".timeWarning").remove()
;var time=$timeInput.val(),isValid=this.isValidTime(time)
;if(!isValid)$timeInput.after('<div class="text-danger timeWarning">Enter time as "hh:mm" in 24-hr format</div>')
;this.resize()}},isValidDate:function(dateString){
var regEx=/^\d{4}-\d{2}-\d{2}$/
;if(!dateString.match(regEx))return false
;var d=new Date(dateString),dNum=d.getTime()
;if(!dNum&&0!==dNum)return false
;return d.toISOString().slice(0,10)===dateString},
isDateSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","date")
;var supported=true
;if("date"!==input.type)supported=false
;return this.dateSupported=supported,input.remove(),
supported},dateSupported:true,
checkDateFormat:function($dateInput){
if(!this.dateSupported){
$dateInput.next(".dateWarning").remove()
;var date=$dateInput.val(),isValid=this.isValidDate(date)
;if(!isValid)$dateInput.after('<div class="text-danger dateWarning">Enter date as "YYYY-MM-DD"</div>')
;$dateInput.datepicker({dateFormat:"yy-mm-dd"
}),this.resize()}},setUpInitialState:function(){
$(".myLeftCol").addClass("col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"),
$(".myLeftCol2").addClass("col-12 col-sm-6 col-md-4 col-lg-3 text-left"),
this.isDateSupported(),
this.isTimeSupported(),$("input[type='date']").prop("placeholder","YYYY-MM-DD").on("change",e=>{
this.checkDateFormat($(e.currentTarget))
}),$("input[type='time']").prop("placeholder","hh:mm").on("change",e=>{
this.checkTimeFormat($(e.target))
}),$("textarea.autoAdjust").each((i,e)=>{
e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}).on("input",e=>{
e.target.style.height="auto",e.target.style.height=e.target.scrollHeight+"px",
this.resize()}),$(".toggleTable").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),$table=$("#"+tableID)
;this.toggleTableFuncs($table)
}),$(".toCSV").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),dateToday=luxon.DateTime.now().toISODate(),fileName="table_"+tableID+"_"+dateToday,$errorMsg=$("#errorMsg")
;this.toCSVFuncs(fileName,tableID,$errorMsg)
}),$(".copyData").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),tableSearch=this.tableSearch(tableID),$copyHead=$(".copyHead"+tableSearch),$transpose=$(".transpose"+tableSearch),$tableToCopy=$("#"+tableID),$tableDiv=$tableToCopy.parent(),$errorMsg=$("#errorMsg"),$divForCopy=$("#forCopy")
;this.copyDataFuncs($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose)
}),$("#the_form").on("input",e=>{
if($(e.target).data("watch"))this.watchValue($(e.target));else this.updateCalcFromEl(e.target)
}),$("input, select, textarea").each((i,e)=>{
if("button"!=$(e).attr("type"))if($(e).data("watch"))this.watchValue($(e));else this.updateCalcFromEl(e)
}),$("#numChannels").on("change",e=>{
this.updateChannels($(e.currentTarget).val())
}),$(".addImage").on("click",e=>{
if(this.imageNums.length>0)var lastImage=this.imageNums[this.imageNums.length-1],imageNum=lastImage+1;else var imageNum=1
;var inArray=this.checkInArray(imageNum,this.imageNums)
;if(!inArray)this.imageNums.push(imageNum),
this.images[imageNum]={},this.makeImageCard(imageNum)
}),$(".updateImgNames").on("input",e=>{
for(var i=0;i<this.imageNums.length;i++){
var imageNum=this.imageNums[i]
;this.updateFileName(imageNum)}
}),$("#useCRHcFos").on("click",e=>{
this.CRHcFosOpticalConfigs()}),this.resize()},
resize:function(){
this.parent_class.resize_container()},
checkForNames:function(){
$("input, select, textarea").each((i,e)=>{
var thisName=$(e).attr("name")
;if(!thisName)console.log("There is no name attribute for: ",e.id);else{
var hasUpper=/[A-Z]/.test(thisName)
;if(hasUpper)console.log("The name contains an uppercase letter for: ",e.id)
}})},getDynamicContent:function(){
var dynamicContent={};return dynamicContent},
data_valid_form:function($errorMsg){
var valid=true,fail_log=$("<div></div>").append("Missing values for:"),name
;if($(".needForTable").each((i,e)=>{
if(!$(e).val())valid=false,name=$(e).attr("id"),
fail_log.append("<br/>"+name)
}),!valid)$errorMsg.html("<span style='color:red; font-size:36px;'>"+"Please fill out all elements marked by a"+"</span><span style='color:blue; font-size:36px;'>"+" blue #"+"</span>"),
$errorMsg.append(fail_log);else $errorMsg.html("")
;return this.resize(),valid},
runIfConfirmed:function(text,functionToCall,elForHeight=null){
var thisMessage="Are you sure?"
;if(text)thisMessage=text;var top="auto"
;if(elForHeight)console.log(elForHeight),
top=elForHeight.offsetTop+"px";bootbox.confirm({
message:thisMessage,callback:proceed=>{
if(proceed)functionToCall()}
}),$(".modal-dialog").css("top",top),console.log(top)
},
dialogConfirm:function(text,functionToCall,elForHeight=null){
var thisMessage="Do you want to proceed?"
;if(text)thisMessage=text;var top="auto"
;if(elForHeight)top=elForHeight.offsetTop+"px"
;bootbox.confirm({message:thisMessage,
callback:result=>{functionToCall(result)}
}),$(".modal-dialog").css("top",top)},
runBasedOnInput:function(prompt,functionToCall,elForHeight=null){
var thisTitle="Enter value:"
;if(prompt)thisTitle=prompt;var top="auto"
;if(elForHeight)top=elForHeight.offsetTop+"px"
;bootbox.prompt({title:thisTitle,
callback:result=>{functionToCall(result)}
}),$(".modal-dialog").css("top",top)},
checkInArray:function(searchVal,array){
var proceed=-1!==$.inArray(searchVal,array)
;return proceed},
dataSearch:function(dataName,dataValue){
var dataSearch="[data-"+dataName+"='"+dataValue+"']"
;return dataSearch},tableSearch:function(table){
var tableSearch=this.dataSearch("table",table)
;return tableSearch},calcSearch:function(calc){
var calcSearch=this.dataSearch("calc",calc)
;return calcSearch},daySearch:function(day){
var daySearch=this.dataSearch("day",day)
;return daySearch},mouseSearch:function(mouse){
var mouseSearch=this.dataSearch("mouse",mouse)
;return mouseSearch},
channelSearch:function(channel){
var channelSearch=this.dataSearch("channel",channel)
;return channelSearch},
imageSearch:function(image){
var imageSearch=this.dataSearch("image",image)
;return imageSearch},
analysisSearch:function(analysis){
var analysisSearch=this.dataSearch("analysis",analysis)
;return analysisSearch},
updateCalcFromEl:function(el){
var calc=el.id,val=el.value,calcSearch=this.calcSearch(calc)
;$(calcSearch).html(val),this.resize()},
updateCalcFromVal:function(calc,val){
var calcSearch=this.calcSearch(calc)
;$(calcSearch).text(val),this.resize()},
watchValue:function($el){
var watch=$el.data("watch"),calcSearch=this.calcSearch(watch),dayNum=$el.data("day"),channelNum=$el.data("channel"),imgNum=$el.data("image"),val=$el.val()
;if(dayNum)calcSearch+=this.daySearch(dayNum)
;if(channelNum>=0)calcSearch+=this.channelSearch(channelNum)
;if(imgNum>0)calcSearch+=this.imageSearch(imgNum)
;if("imgNum"==watch)val="Image "+("000"+val).slice(-3)
;if("fluor"==watch)if(!val){
var printChannel=parseInt(channelNum)+1
;val="Channel "+printChannel}
if("fileName"==watch)if(!val){var printNum=val+1
;val="Image "+("000"+printNum).slice(-3)}
$(calcSearch).html(val),this.resize()},
toggleTableFuncs:function($table){
this.data_valid_form(),$table.toggle(),this.resize()
},toCSVFuncs:function(fileName,tableID,$errorMsg){
var data_valid=this.data_valid_form($errorMsg)
;if(data_valid)this.exportTableToCSV(fileName,tableID),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Saved successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Did not export</span>")
},downloadCSV:function(csv,filename){
var csvFile,downloadLink;csvFile=new Blob([csv],{
type:"text/csv"
}),downloadLink=document.createElement("a"),downloadLink.download=filename,
downloadLink.href=window.URL.createObjectURL(csvFile),
downloadLink.style.display="none",
document.body.appendChild(downloadLink),downloadLink.click()
},exportTableToCSV:function(filename,table){
for(var csv=[],datatable=document.getElementById(table),rows=datatable.querySelectorAll("tr"),i=0;i<rows.length;i++){
for(var row=[],cols=rows[i].querySelectorAll("td, th"),j=0;j<cols.length;j++){
var cellText='"'+cols[j].innerText+'"'
;row.push(cellText)}csv.push(row.join(","))}
this.downloadCSV(csv.join("\n"),filename)},
copyDataFuncs:function($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose){
var data_valid=this.data_valid_form($errorMsg),copyHead=false,transpose=false
;if($copyHead.is(":checked"))copyHead=true
;if($transpose.is(":checked"))transpose=true
;if(data_valid)$tableDiv.show(),this.resize(),
this.copyTable($tableToCopy,copyHead,$divForCopy,transpose),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Copied successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Nothing was copied</span>")
},
copyTable:function($table,copyHead,$divForCopy,transpose){
var $temp=$("<text"+"area style='opacity:0;'></text"+"area>"),rows=[],rowNum=0
;if(copyHead)$table.find("thead").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;$table.find("tbody").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;for(var i=0;i<rows.length;i++)rows[i]=rows[i].join("\t")
;$temp.append(rows.join("\n")),
$temp.appendTo($divForCopy).select(),document.execCommand("copy"),
$temp.remove()},toggleCard:function($cardHead){
$cardHead.next().toggleClass("collapse"),
$cardHead.next().find("textarea.autoAdjust").each((i,e)=>{
if(!$(e).is(":hidden"))e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}),this.resize()},
makeCard:function($div,cardHeadContent,cardBodyContent){
$div.append($("<div></div>",{class:"card"
}).append($("<button></button>",{type:"button",
class:"card-header"}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append(cardHeadContent)).append($("<div></div>",{
class:"card-body collapse"
}).append(cardBodyContent))),this.resize()},
updateChannels:function(numChannels){
var currentNumChannels
;if(currentNumChannels=parseInt(this.numChannels),0==currentNumChannels)$(".channels").text("")
;if(currentNumChannels<numChannels){
for(i=currentNumChannels;i<numChannels;i++)this.makeChannel(i)
;this.numChannels=numChannels
;for(var iImg=0;iImg<this.imageNums.length;iImg++){
var imageNum=this.imageNums[iImg]
;this.updateOpticalConfigRows(imageNum)}
}else if(currentNumChannels>numChannels)this.dialogConfirm("Are you sure you want to remove a channel?",result=>{
if(result){
for(i=currentNumChannels;i>=numChannels;i--){
var channelSearch=this.dataSearch("channel",i)
;$(channelSearch).remove()}
this.numChannels=numChannels
}else $("#numChannels").val(currentNumChannels)
;this.resize()});this.resize()},
updateOpticalConfigRows:function(imgNum){
var imageSearch=this.imageSearch(imgNum),$div=$(".opticalConfigDiv"+imageSearch),currentNumConfigs=$div.find(".config").length,numChannels=this.numChannels
;if(currentNumConfigs<numChannels)for(i=currentNumConfigs;i<numChannels;i++)this.makeConfig(i,imgNum);else if(currentNumConfigs>numChannels){
for(i=currentNumConfigs;i>=numChannels;i--);
this.resize()}this.resize()},
makeChannel:function(channelNum){
var printNum=parseInt(channelNum)+1
;$(".channels").append($("<div></div>",{
"data-channel":channelNum,
class:"container col-12 col-md-6 col-lg-3"
}).append($("<div></div>",{class:"row mt-2"
}).append($("<h4></h4>",{class:"col"
}).append("Channel "+printNum))).append(this.makeOCRow("Fluorophore + Target",$("<input></input>",{
type:"text",id:"fluor"+channelNum,
name:"fluor"+channelNum,
class:"fluor fullWidth watch",
"data-watch":"fluor","data-channel":channelNum
}))).append(this.makeOCRow("Channel Name",$("<input></input>",{
type:"text",id:"channelName"+channelNum,
name:"configname"+channelNum,
class:"channelName fullWidth watch",
"data-watch":"channelName",
"data-channel":channelNum
}))).append(this.makeOCRow("Default Intensity",$("<input></input>",{
class:"defIntensity fullWidth",
id:"defIntensity"+channelNum,
name:"defintensity"+channelNum,
"data-channel":channelNum,type:"number",min:0,
max:100
}))).append(this.makeOCRow("Default Exposure (ms)",$("<input></input>",{
class:"defExposure fullWidth",
id:"defExposure"+channelNum,
name:"defexposure"+channelNum,
"data-channel":channelNum,type:"number"
}).after("<hr/>"))))},
makeRow:function(label,$input,addRowClass=""){
var myLeftCol="col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"
;if(addRowClass)addRowClass=" "+addRowClass
;var $row=$("<div></div>",{
class:"row mt-2"+addRowClass
}).append($("<div></div>",{class:myLeftCol
}).append(label)).append($("<div></div>",{
class:"col"}).append($input));return $row},
makeOCRow:function(label,$input,addRowClass=""){
var myLeftCol="col-12 col-sm-6 col-lg-12 col-xl-6 text-left text-sm-right text-lg-left text-xl-right"
;if(addRowClass)addRowClass=" "+addRowClass
;var $row=$("<div></div>",{
class:"row mt-2"+addRowClass
}).append($("<div></div>",{class:myLeftCol
}).append(label)).append($("<div></div>",{
class:"col"}).append($input));return $row},
makeImageCard:function(imgNum){
var $div=$("#imgDiv"),$header=$("<div></div>",{
"data-calc":"fileName","data-image":imgNum
}),myLeftCol="col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"
;if(this.imageNums.length>1){
var lastImage=this.imageNums[this.imageNums.length-2],lastImageSearch=this.imageSearch(lastImage),lastImgVal=$(".imgNum"+lastImageSearch).val()
;if(lastImgVal)var imgVal=parseInt(lastImgVal)+1;else var imgVal=1
}else var imgVal=1;var $body=$("<div></div>",{
class:"container"
}).append(this.makeRow("Image #",$("<input></input>",{
class:"imgNum fullWidth updateImgName watch",
id:"imgNum"+imgNum,name:"imgnum"+imgNum,
"data-watch":"imgNum","data-image":imgNum,
type:"number",step:1,min:0,value:imgVal
}))).append(this.makeRow("Capture Date:",$("<input></input>",{
class:"captureDate fullWidth updateImgName",
id:"captureDate"+imgNum,name:"capturedate"+imgNum,
"data-image":imgNum,type:"date",
value:luxon.DateTime.now().toISODate()
}).on("change",e=>{
this.checkDateFormat($(e.currentTarget))
}).each((i,e)=>{this.checkDateFormat($(e))
}))).append(this.makeRow("Objective",$("<select></select>",{
class:"objective fullWidth updateImgName",
id:"objective"+imgNum,name:"objective"+imgNum,
"data-image":imgNum
}).append("<option value=''>[Select]</option>"+"<option value='4x'>4x</option>"+"<option value='10x'>10x</option>"+"<option value='20x'>20x</option>"+"<option value='20x'>40x</option>"))).append(this.makeRow("Region",$("<input></input>",{
class:"region fullWidth updateImgName",
id:"region"+imgNum,name:"region"+imgNum,
"data-image":imgNum
}))).append(this.makeRow("Auto update name?",$("<input></input>",{
type:"checkbox",class:"autoUpdate updateImgName",
name:"autoupdate"+imgNum,id:"autoUpdate"+imgNum,
"data-image":imgNum,checked:true
}),"align-items-center")).append(this.makeRow("File name",$("<input></input>",{
class:"fileName fullWidth updateImgName watch",
id:"fileName"+imgNum,name:"filename"+imgNum,
"data-image":imgNum,"data-watch":"fileName"
}))).append(this.makeRow("Delete",$("<input></input>",{
type:"button",class:"deleteImg fullWidth",
id:"deleteImg"+imgNum,name:"deleteimg"+imgNum,
"data-image":imgNum,value:"Delete image"
}).on("click",e=>{this.deleteImageFuncs(imgNum)
}),"hideView")).append($("<div></div>",{
class:"opticalConfigDiv row","data-image":imgNum
}).append($("<div></div>",{
class:"brightfield container col-12 col-md-6 col-lg-3"
}).append(this.makeOCRow($("<strong></strong>").append("Brightfield ").after($("<input></input>",{
type:"checkbox",class:"useBF updateImgName",
name:"usebf"+imgNum,id:"useBF"+imgNum,
"data-image":imgNum
})))).append(this.makeOCRow("Channel name",$("<input></input>",{
type:"text",
class:"bfName updateImgName fullWidth",
name:"bfname"+imgNum,id:"bfName"+imgNum,
"data-image":imgNum,value:"Brightfield"
}))).append(this.makeOCRow("Exposure (ms)",$("<input></input>",{
class:"BFexposure fullWidth",
id:"BFexposure"+imgNum,name:"bfexposure"+imgNum,
"data-image":imgNum,type:"number"
}).after("<hr/>"))))).append(this.makeRow("Merged RGB Export",$("<input></input>",{
type:"checkbox",class:"mergeExport",
name:"mergeexport"+imgNum,id:"mergeExport"+imgNum,
"data-image":imgNum}).after($("<span></span>",{
class:"mergeRBGName","data-image":imgNum
})),"align-items-center")).append($("<div></div>",{
class:"indivChannelRGBdiv","data-image":imgNum
})).append(this.makeRow("Description/Observations",$("<text"+"area></tex"+"tarea>",{
class:"observations fullWidth autoAdjust",
id:"observations"+imgNum,
name:"observations"+imgNum,"data-image":imgNum
}).on("input",e=>{
e.target.style.height="auto",e.target.style.height=e.target.scrollHeight+"px",
this.resize()
}))).append("<hr/>").append(this.makeRow("Add analysis image",$("<input></input>",{
type:"button",
class:"addAnalysisImg fullWidth disableOnView",
id:"addAnalysisImg"+imgNum,
name:"addanalysisimg"+imgNum,"data-image":imgNum,
value:"Add analysis image"}).on("click",e=>{
this.addAnalysisImage(imgNum)
}),"hideView")).append($("<div></div>",{
class:"analysisImages mt-4","data-image":imgNum}))
;this.makeCard($div,$header,$body),
$div.find(".card").last().attr("data-image",imgNum).data("image",imgNum),
this.updateOpticalConfigRows(imgNum),
this.updateFileName(imgNum),$(".updateImgName").on("input",e=>{
this.updateFileName($(e.currentTarget).data("image"))
})},
makeAnalysisImageRows:function(imgNum,addImageNum){
var imageSearch=this.imageSearch(imgNum)
;$(".analysisImages"+imageSearch).append($("<div></div>",{
"data-image":imgNum,"data-analysis":addImageNum
}).append(this.makeRow("File Name",$("<input></input>",{
class:"addFileName fullWidth",
id:"addFileName"+imgNum+addImageNum,
name:"addfilename"+imgNum+addImageNum,
"data-image":imgNum,"data-analysis":addImageNum,
value:$(".fileName"+imageSearch).val()
}))).append(this.makeRow("Notes",$("<text"+"area></tex"+"tarea>",{
class:"notes fullWidth autoAdjust",
id:"notes"+imgNum+addImageNum,
name:"notes"+imgNum+addImageNum,
"data-image":imgNum,"data-analysis":addImageNum
}).on("input",e=>{
e.target.style.height="auto",e.target.style.height=e.target.scrollHeight+"px",
this.resize()
}))).append(this.makeRow("Delete",$("<input></input>",{
type:"button",class:"deleteAddImg fullWidth",
id:"deleteAddImg"+imgNum,
name:"deleteaddimg"+imgNum,"data-image":imgNum,
"data-analysis":addImageNum,
value:"Delete additional image"}).on("click",e=>{
this.deleteAddImageFuncs(imgNum,addImageNum)
}),"hideView")).append("<hr/>"))},
addAnalysisImage:function(imgNum){
if(!this.images[imgNum].addImages)this.images[imgNum].addImages=[]
;var addImages=this.images[imgNum].addImages
;if(addImages.length>0)var lastAddImage=addImages[addImages.length-1],addImageNum=lastAddImage+1;else var addImageNum=1
;var inArray=this.checkInArray(addImageNum,this.images[imgNum].addImages)
;if(!inArray)this.images[imgNum].addImages.push(imgNum),
this.makeAnalysisImageRows(imgNum,addImageNum)},
makeConfig:function(configNum,imgNum){
var imageSearch=this.imageSearch(imgNum),$div=$(".opticalConfigDiv"+imageSearch),channelSearch=this.channelSearch(configNum),fluorTarget=$(".fluor"+channelSearch).val(),channelName=$(".channelName"+channelSearch).val(),defIntensity=$(".defIntensity"+channelSearch).val(),defExposure=$(".defExposure"+channelSearch).val(),printConfig=parseInt(configNum)+1
;$div.append($("<div></div>",{
class:"config container col-12 col-md-6 col-lg-3",
"data-channel":configNum
}).append(this.makeOCRow($("<strong></strong>").append("Channel "+printConfig+" ").after($("<input></input>",{
type:"checkbox",class:"useOC updateImgName",
name:"useoc"+imgNum+configNum,
id:"useOC"+imgNum+configNum,"data-image":imgNum,
"data-channel":configNum
})))).append(this.makeOCRow("Fluorophore + Target",$("<input></input>",{
class:"target fullWidth updateImgName",
id:"target"+imgNum+configNum,
name:"target"+imgNum+configNum,
"data-image":imgNum,"data-channel":configNum,
type:"text",value:fluorTarget
}))).append(this.makeOCRow("Channel Name",$("<input></input>",{
class:"oChannelName fullWidth updateImgName",
id:"oChannelName"+imgNum+configNum,
name:"ochannelname"+imgNum+configNum,
"data-image":imgNum,"data-channel":configNum,
type:"text",value:channelName
}))).append(this.makeOCRow("Intensity",$("<input></input>",{
class:"intensity fullWidth",
id:"intensity"+imgNum+configNum,
name:"intensity"+imgNum+configNum,
"data-image":imgNum,type:"number",min:0,max:100,
value:defIntensity
}))).append(this.makeOCRow("Exposure (ms)",$("<input></input>",{
class:"exposure fullWidth",
id:"exposure"+imgNum+configNum,
name:"exposure"+imgNum+configNum,
"data-image":imgNum,type:"number",
value:defExposure}).after("<hr/>"))))},
updateFileName:function(imgNum){
var imageSearch=this.imageSearch(imgNum),autoUpdate=false
;if($(".autoUpdate"+imageSearch).is(":checked"))autoUpdate=true
;var nameString="";if(autoUpdate){
var realNumber=("000"+$(".imgNum"+imageSearch).val()).slice(-3),date=$(".captureDate"+imageSearch).val(),objective=$(".objective"+imageSearch).val(),region=$(".region"+imageSearch).val(),mouseID=$("#mouseID").val(),seriesID=$("#seriesID").val(),sectionID=$("#sectionID").val()
;if(mouseID){
if(nameString=mouseID,seriesID)nameString+="_"+seriesID
;if(sectionID)nameString+="_"+sectionID
;if(region)nameString+="_"+region
;if(objective)nameString+="_"+objective
;if($(".useBF"+imageSearch).is(":checked"))nameString+="_BF"
;for(var i=0;i<this.numChannels;i++){
var channelSearch=this.channelSearch(i)
;if($(".useOC"+channelSearch+imageSearch).is(":checked")){
var target=$(".target"+channelSearch+imageSearch).val()
;if(target)nameString+="_"+target}}
if(date)nameString+="_"+date
;if(realNumber)nameString+="_"+realNumber
;nameString+=".nd2"}
$(".fileName"+imageSearch).val(nameString)}
var fileName=$(".fileName"+imageSearch).val(),output
;if(!fileName)output="",fileName="Image "+("000"+imgNum).slice(-3);else output=fileName.substr(0,fileName.lastIndexOf("."))||fileName
;if($(this.calcSearch("fileName")+imageSearch).text(fileName),
$(".indivChannelRGBdiv"+imageSearch).text(""),
output){
if($(".mergeRBGName"+imageSearch).text(" "+output+"_RGB.tif"),$(".useBF"+imageSearch).is(":checked")){
var bfName=$(".bfName"+imageSearch).val()
;$(".indivChannelRGBdiv"+imageSearch).append(this.makeRow("Brightfield export",$("<input></input>",{
type:"checkbox",class:"bfExport",
name:"bfexport"+imgNum,id:"bfExport"+imgNum,
"data-image":imgNum
}).after(" "+output+"_RGB_"+bfName+".tif"),"align-items-center"))
}for(var i=0;i<this.numChannels;i++){
var channelSearch=this.channelSearch(i),printChannel=i+1,channelName=$(".oChannelName"+imageSearch+channelSearch).val()
;if($(".useOC"+channelSearch+imageSearch).is(":checked"))$(".indivChannelRGBdiv"+imageSearch).append(this.makeRow("Channel "+printChannel+" export",$("<input></input>",{
type:"checkbox",class:"channelExport",
name:"channelexport"+imgNum+i,
id:"channelExport"+imgNum+i,"data-image":imgNum,
"data-channel":i
}).after(" "+output+"_RGB_"+channelName+".tif"),"align-items-center"))
}
}else $(".mergeRBGName"+imageSearch).text(" [Enter a file name]")
},deleteImageFuncs:function(imageNum){
this.runIfConfirmed("Are you sure that you wish to delete this image?",()=>{
var index=this.imageNums.indexOf(imageNum)
;if(index>-1)this.imageNums.splice(index,1)
;delete this.images[imageNum]
;var imageSearch=this.imageSearch(imageNum)
;$(imageSearch).remove(),this.resize()})},
deleteAddImageFuncs:function(imageNum,addImageNum){
this.runIfConfirmed("Are you sure that you wish to delete this image?",()=>{
var index=this.images[imageNum].addImages.indexOf(addImageNum)
;if(index>-1)this.images[imageNum].addImages.splice(index,1)
;var imageSearch=this.imageSearch(imageNum),addImageSearch=this.analysisSearch(addImageNum)
;$(imageSearch+addImageSearch).remove(),
this.resize()})},CRHcFosOpticalConfigs:function(){
$("#numChannels").val(3),this.updateChannels(3)
;for(var i=0;i<3;i++){
var channelSearch=this.channelSearch(i),fluor="",intensity,channelName,exposure
;switch(i){case 0:
fluor="488-GFP",intensity=20,channelName="AF488"
;break;case 1:
fluor="594-cFos",intensity=25,channelName="AF594"
;break;case 2:
fluor="DAPI",intensity=25,channelName="DAPI",exposure=100
;break;default:break}
if($(".fluor"+channelSearch).val(fluor),$(".defIntensity"+channelSearch).val(intensity),
$(".channelName"+channelSearch).val(channelName),
exposure)$(".defExposure"+channelSearch).val(exposure)
}}};