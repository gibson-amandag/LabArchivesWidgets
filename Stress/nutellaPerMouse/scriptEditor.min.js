my_widget_script={init:function(mode,json_data){
var parsedJson=this.parseInitJson(json_data)
;this.makeVehCard(),this.initDynamicContent(parsedJson),
window.onresize=(()=>this.resize()),
this.addEventListeners(),this.parent_class.init(mode,()=>JSON.stringify(parsedJson.widgetData)),
this.addRequiredFieldIndicators(),
this.setUpInitialState(),this.adjustForMode(mode),
this.checkForNames()},to_json:function(){
var widgetJsonString=this.parent_class.to_json(),dynamicContent=this.getDynamicContent(),output={
widgetData:JSON.parse(widgetJsonString),
doseNums:this.doseNums,doses:this.doses}
;return JSON.stringify(output)},
from_json:function(json_data){
var parsedJson=JSON.parse(json_data)
;this.parent_class.from_json(JSON.stringify(parsedJson.widgetData))
},test_data:function(){
var testData=JSON.parse(this.parent_class.test_data()),output={
widgetData:testData,doseNums:[1,2],doses:{1:{
id:"10"},2:{id:"3"}}}
;return JSON.stringify(output)},
is_valid:function(b_suppress_message){
var fail=false,fail_log="",name
;if($("#the_form").find("select, textarea, input").each((i,e)=>{
if(!$(e).prop("required"));else if(!$(e).val())fail=true,
name=$(e).attr("id"),fail_log+=name+" is required \n"
}),$("input[type='date']").each((i,e)=>{
var date=$(e).val();if(date){
var validDate=this.isValidDate(date)
;if(!validDate)fail=true,fail_log+="Please enter valid date in form 'YYYY-MM-DD'"
}}),$("input[type='time']").each((i,e)=>{
var time=$(e).val();if(time){
var validtime=this.isValidTime(time)
;if(!validtime)fail=true,fail_log+="Please enter valid time in form 'hh:mm' - 24 hr time"
}}),fail)return bootbox.alert(fail_log);else{
var noErrors=[];return noErrors}},
is_edited:function(){
return this.parent_class.is_edited()},
reset_edited:function(){
return this.parent_class.reset_edited()},
parseInitJson:function(json_data){var jsonString
;if("string"===typeof json_data)jsonString=json_data;else jsonString=json_data()
;var parsedJson=JSON.parse(jsonString)
;return parsedJson},
initDynamicContent:function(parsedJson){
if(console.log(parsedJson),parsedJson.doses)this.doses=parsedJson.doses;else this.doses={}
;if(parsedJson.doseNums)for(var i=0;i<parsedJson.doseNums.length;i++)dose=parsedJson.doseNums[i],
this.doseNums.push(dose),
this.makeDoseCard(dose);else this.doseNums=[]},
adjustForMode:function(mode){
if("edit"!==mode&&"edit_dev"!==mode)$(".disableOnView").prop("disabled",true),
$("input[type='date']").removeClass(".hasDatePicker"),
$(".hideView").hide();else $("input[type='date']").each((i,e)=>{
this.checkDateFormat($(e))
}),$("input[type='time']").each((i,e)=>{
this.checkTimeFormat($(e))})},
addEventListeners:function(){},
addRequiredFieldIndicators:function(){
$(".needForTableLab").each((i,e)=>{
$(e).html("<span class='hideView' style='color:blue'>#</span>"+$(e).html())
}),$(".requiredLab").each((i,e)=>{
$(e).html("<span class='hideView' style='color:red'>*</span>"+$(e).html())
})},isValidTime:function(timeString){
var regEx="^(((([0-1][0-9])|(2[0-3])):[0-5][0-9]))$"
;if(!timeString.match(regEx))return false;else return true
},isTimeSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","time")
;var supported=true
;if("time"!==input.type)supported=false
;return this.timeSupported=supported,input.remove(),
supported},timeSupported:true,
checkTimeFormat:function($timeInput){
if(!this.timeSupported){
$timeInput.next(".timeWarning").remove()
;var time=$timeInput.val(),isValid=this.isValidTime(time)
;if(!isValid)$timeInput.after('<div class="text-danger timeWarning">Enter time as "hh:mm" in 24-hr format</div>')
;this.resize()}},isValidDate:function(dateString){
var regEx=/^\d{4}-\d{2}-\d{2}$/
;if(!dateString.match(regEx))return false
;var d=new Date(dateString),dNum=d.getTime()
;if(!dNum&&0!==dNum)return false
;return d.toISOString().slice(0,10)===dateString},
isDateSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","date")
;var supported=true
;if("date"!==input.type)supported=false
;return this.dateSupported=supported,input.remove(),
supported},dateSupported:true,
checkDateFormat:function($dateInput){
if(!this.dateSupported){
$dateInput.next(".dateWarning").remove()
;var date=$dateInput.val(),isValid=this.isValidDate(date)
;if(!isValid)$dateInput.after('<div class="text-danger dateWarning">Enter date as "YYYY-MM-DD"</div>')
;$dateInput.datepicker({dateFormat:"yy-mm-dd"
}),this.resize()}},setUpInitialState:function(){
if($(".myLeftCol").addClass("col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"),
this.isDateSupported(),
this.isTimeSupported(),$("input[type='date']").prop("placeholder","YYYY-MM-DD").on("change",e=>{
this.checkDateFormat($(e.currentTarget))
}),$("input[type='time']").prop("placeholder","hh:mm").on("change",e=>{
this.checkTimeFormat($(e.target))
}),$("textarea.autoAdjust").each((i,e)=>{
e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}).on("input",e=>{
e.target.style.height="auto",e.target.style.height=e.target.scrollHeight+"px",
this.resize()}),$(".toggleTable").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),$table=$("#"+tableID)
;this.toggleTableFuncs($table)
}),$(".toCSV").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),dateToday=luxon.DateTime.now().toISODate(),fileName="table_"+tableID+"_"+dateToday,$errorMsg=$("#errorMsg")
;this.toCSVFuncs(fileName,tableID,$errorMsg)
}),$(".copyData").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),tableSearch=this.tableSearch(tableID),$copyHead=$(".copyHead"+tableSearch),$transpose=$(".transpose"+tableSearch),$tableToCopy=$("#"+tableID),$tableDiv=$tableToCopy.parent(),$errorMsg=$("#errorMsg"),$divForCopy=$("#forCopy")
;this.copyDataFuncs($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose)
}),$("#the_form").on("input",e=>{
if($(e.target).data("watch"))this.watchValue($(e.target));else this.updateCalcFromEl(e.target)
}),$("input, select, textarea").each((i,e)=>{
if("button"!=$(e).attr("type"))if($(e).data("watch"))this.watchValue($(e));else this.updateCalcFromEl(e)
}),$("#drugName").each((i,e)=>{
this.showOther($(e))}).on("input",e=>{
this.showOther($(e.currentTarget)),this.changeStockConc($(e.currentTarget))
}),$("#addDose").on("click",e=>{
if(this.doseNums.length>0)var lastDose=this.doseNums[this.doseNums.length-1],doseNum=lastDose+1;else var doseNum=1
;var inArray=this.checkInArray(doseNum,this.doseNums)
;if(!inArray)this.doseNums.push(doseNum),
this.doses[doseNum]={},this.makeDoseCard(doseNum)
}),$("#stockConc").on("change",e=>{
if(this.doseNums.length>0)for(doseNum in this.doses)this.calcStock(doseNum)
}),this.doseNums.length>0)for(doseNum in this.doses)this.calcStock(doseNum)
;this.calcVehicle(),this.resize()},stockConcs:{
cort:25},changeStockConc:function($drugNameEl){
var drug=$drugNameEl.val(),conc=this.stockConcs[drug]
;if(conc)$("#stockConc").val(conc);else $("#stockConc").val("")
},calcStock:function(doseNum){
var doseSearch=this.doseSearch(doseNum),stockConc=$("#stockConc").val(),stockAmnt,stockAmntPerMouse,nutellaForMouse
;if(stockConc>0){
var dosage=$(".dosage"+doseSearch).val()
;if(dosage>0){
var avgMouse=$(".avgMouseMass"+doseSearch).val()
;if(avgMouse>0){
var nutellaPerMouse=$(".nutellaPerMouse"+doseSearch).val()
;if(nutellaPerMouse>0){
var mouseMass=$(".mouseMass"+doseSearch).val()
;if(mouseMass>0)nutellaForMouse=mouseMass/avgMouse*nutellaPerMouse
;var amntNutella=$(".amntNutella"+doseSearch).val()
;if(amntNutella>0)stockAmntPerMouse=avgMouse*(1/1e3)*dosage*(1/stockConc)*1e3,
numMiceDoses=amntNutella/nutellaPerMouse,
stockAmnt=numMiceDoses*stockAmntPerMouse;else stockAmnt="{Enter measured Nutella}"
}else stockAmnt="{Enter Nutella/mouse}"
}else stockAmnt="{Enter avg mouse mass}"
}else stockAmnt="{Enter dosage}"
}else stockAmnt="{Enter stock conc}"
;if(isNaN(stockAmnt))stockAmntPerMouse=stockAmnt,
numMiceDoses=stockAmnt,nutellaForMouse=stockAmnt;else{
if(stockAmnt>0)stockAmnt=+stockAmnt.toFixed(2)+"&micro;L";else stockAmnt="{double check entries}"
;if(stockAmntPerMouse>0)stockAmntPerMouse=+stockAmntPerMouse.toFixed(2)+"&micro;L";else stockAmntPerMouse="{double check entries}"
;if(numMiceDoses>0)numMiceDoses=+numMiceDoses.toFixed(2);else numMiceDoses="{double check entries}"
;if(nutellaForMouse>0)nutellaForMouse=+nutellaForMouse.toFixed(2)+"mg";else nutellaForMouse="{double check entries}"
}
$(".stockPerMouse"+doseSearch).html(stockAmntPerMouse),$(".numMiceDoses"+doseSearch).html(numMiceDoses),
$(".calcedStock"+doseSearch).html(stockAmnt),
$(".adjNutellaForMouse"+doseSearch).html(nutellaForMouse)
},calcVehicle:function(){
var vehAmnt,vehVol=$(".vehVol").val()
;if(vehVol>0){
var nutellaPerMouse=$(".nutellaPerMouseVeh").val()
;if(nutellaPerMouse>0){
var amntNutella=$(".amntNutellaVeh").val()
;if(amntNutella>0)numMiceDoses=amntNutella/nutellaPerMouse,
vehAmnt=numMiceDoses*vehVol;else vehAmnt="{Enter measured Nutella}"
}else vehAmnt="{Enter Nutella/mouse}"
}else vehAmnt="{Enter dosage}"
;if(isNaN(vehAmnt))numMiceDoses=vehAmnt;else{
if(vehAmnt>0)vehAmnt=+vehAmnt.toFixed(2)+"&micro;L";else vehAmnt="{double check entries}"
;if(numMiceDoses>0)numMiceDoses=+numMiceDoses.toFixed(2);else numMiceDoses="{double check entries}"
}
$(".numMiceDosesVeh").html(numMiceDoses),$(".calcedVehicle").html(vehAmnt)
},resize:function(){
this.parent_class.resize_container()},
checkForNames:function(){
$("input, select, textarea").each((i,e)=>{
var thisName=$(e).attr("name")
;if(!thisName)console.log("There is no name attribute for: ",e.id);else{
var hasUpper=/[A-Z]/.test(thisName)
;if(hasUpper)console.log("The name contains an uppercase letter for: ",e.id)
}})},getDynamicContent:function(){
var dynamicContent={};return dynamicContent},
data_valid_form:function($errorMsg){
var valid=true,fail_log=$("<div></div>").append("Missing values for:"),name
;if($(".needForTable").each((i,e)=>{
if(!$(e).val())valid=false,name=$(e).attr("id"),
fail_log.append("<br/>"+name)
}),!valid)$errorMsg.html("<span style='color:red; font-size:36px;'>"+"Please fill out all elements marked by a"+"</span><span style='color:blue; font-size:36px;'>"+" blue #"+"</span>"),
$errorMsg.append(fail_log);else $errorMsg.html("")
;return this.resize(),valid},
getOffsetTop:function(element){
var offsetTop=0,lastElement=0
;while(element&&!lastElement){
var formChild=$(element).children("#the_form")
;if(formChild.length>0)lastElement=1
;offsetTop+=element.offsetTop,element=element.offsetParent
}return offsetTop},
runIfConfirmed:function(text,functionToCall,elForHeight=null){
var thisMessage="Are you sure?"
;if(text)thisMessage=text;var top="auto"
;if(elForHeight)top=this.getOffsetTop(elForHeight)+"px"
;bootbox.confirm({message:thisMessage,
callback:proceed=>{if(proceed)functionToCall()}
}),console.log(top),$(".modal-dialog").css("top",top)
},
dialogConfirm:function(text,functionToCall,elForHeight=null){
var thisMessage="Do you want to proceed?"
;if(text)thisMessage=text;var top="auto"
;if(elForHeight)top=this.getOffsetTop(elForHeight)+"px"
;bootbox.confirm({message:thisMessage,
callback:result=>{functionToCall(result)}
}),$(".modal-dialog").css("top",top)},
runBasedOnInput:function(prompt,functionToCall,elForHeight=null){
var thisTitle="Enter value:"
;if(prompt)thisTitle=prompt;var top="auto"
;if(elForHeight)top=this.getOffsetTop(elForHeight)+"px"
;bootbox.prompt({title:thisTitle,
callback:result=>{functionToCall(result)}
}),$(".modal-dialog").css("top",top)},
checkInArray:function(searchVal,array){
var proceed=-1!==$.inArray(searchVal,array)
;return proceed},
dataSearch:function(dataName,dataValue){
var dataSearch="[data-"+dataName+"='"+dataValue+"']"
;return dataSearch},tableSearch:function(table){
var tableSearch=this.dataSearch("table",table)
;return tableSearch},calcSearch:function(calc){
var calcSearch=this.dataSearch("calc",calc)
;return calcSearch},daySearch:function(day){
var daySearch=this.dataSearch("day",day)
;return daySearch},mouseSearch:function(mouse){
var mouseSearch=this.dataSearch("mouse",mouse)
;return mouseSearch},doseSearch:function(dose){
var doseSearch=this.dataSearch("dose",dose)
;return doseSearch},updateCalcFromEl:function(el){
var calc=el.id,val=el.value,calcSearch=this.calcSearch(calc)
;$(calcSearch).html(val),this.resize()},
updateCalcFromVal:function(calc,val){
var calcSearch=this.calcSearch(calc)
;$(calcSearch).text(val),this.resize()},
watchValue:function($el){
var watch=$el.data("watch"),calcSearch=this.calcSearch(watch),doseNum=$el.data("dose"),val=$el.val()
;if(doseNum)calcSearch+=this.doseSearch(doseNum)
;if("dose"==watch)if(!val||isNaN(val))val="Dose "+doseNum;else val+=" mg/kg"
;$(calcSearch).html(val),this.resize()},
showOther:function($el){if("other"===$el.val()){
var $other=$el.next(".ifOther").show(),thisScrollHeight=$other.prop("scrollHeight")
;$other.css("height",thisScrollHeight).css("overflow-y","hidden")
}else $el.next(".ifOther").hide();this.resize()},
toggleTableFuncs:function($table){
this.data_valid_form(),$table.toggle(),this.resize()
},toCSVFuncs:function(fileName,tableID,$errorMsg){
var data_valid=this.data_valid_form($errorMsg)
;if(data_valid)this.exportTableToCSV(fileName,tableID),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Saved successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Did not export</span>")
},downloadCSV:function(csv,filename){
var csvFile,downloadLink;csvFile=new Blob([csv],{
type:"text/csv"
}),downloadLink=document.createElement("a"),downloadLink.download=filename,
downloadLink.href=window.URL.createObjectURL(csvFile),
downloadLink.style.display="none",
document.body.appendChild(downloadLink),downloadLink.click()
},exportTableToCSV:function(filename,table){
for(var csv=[],datatable=document.getElementById(table),rows=datatable.querySelectorAll("tr"),i=0;i<rows.length;i++){
for(var row=[],cols=rows[i].querySelectorAll("td, th"),j=0;j<cols.length;j++){
var cellText='"'+cols[j].innerText+'"'
;row.push(cellText)}csv.push(row.join(","))}
this.downloadCSV(csv.join("\n"),filename)},
copyDataFuncs:function($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose){
var data_valid=this.data_valid_form($errorMsg),copyHead=false,transpose=false
;if($copyHead.is(":checked"))copyHead=true
;if($transpose.is(":checked"))transpose=true
;if(data_valid)$tableDiv.show(),this.resize(),
this.copyTable($tableToCopy,copyHead,$divForCopy,transpose),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Copied successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Nothing was copied</span>")
},
copyTable:function($table,copyHead,$divForCopy,transpose){
var $temp=$("<text"+"area style='opacity:0;'></text"+"area>"),rows=[],rowNum=0
;if(copyHead)$table.find("thead").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;$table.find("tbody").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;for(var i=0;i<rows.length;i++)rows[i]=rows[i].join("\t")
;$temp.append(rows.join("\n")),
$temp.appendTo($divForCopy).select(),document.execCommand("copy"),
$temp.remove()},toggleCard:function($cardHead){
$cardHead.next().toggleClass("collapse"),
$cardHead.next().find("textarea.autoAdjust").each((i,e)=>{
if(!$(e).is(":hidden"))e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}),this.resize()},
makeCard:function($div,cardHeadContent,cardBodyContent){
$div.append($("<div></div>",{class:"card"
}).append($("<button></button>",{type:"button",
class:"card-header"}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append(cardHeadContent)).append($("<div></div>",{
class:"card-body collapse"
}).append(cardBodyContent))),this.resize()},
doseNums:[],doses:{},
makeNumericRow:function(row,col,label,className,doseNum){
var lowerCaseName=className.toLowerCase(),$row=$("<div></div>",{
class:row}).append($("<div></div>",{class:col
}).append(label)).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
"data-dose":doseNum,
id:className+"Numeric"+doseNum,
name:lowerCaseName+"check"+doseNum,
class:className+" fullWidth watch",
"data-watch":className,type:"number"})))
;return $row},makeDoseCard:function(doseNum){
var $div=$("#doseCards")
;if(!$div.find(".card").length)$div.html("")
;var row="row mt-2",col="col-12 col-lg-6"
;$div.append($("<div></div>",{
class:"col col-md-6 mt-2 doseCard",
"data-dose":doseNum}).append($("<div></div>",{
class:"card"}).append($("<button></button>",{
class:"card-header doseHeader",type:"button",
"data-calc":"dose","data-dose":doseNum
}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append("Dose "+doseNum)).append($("<div></div>",{
class:"card-body"}).append($("<div></div>",{
class:row}).append($("<div></div>",{class:col
}).append("<h4>Dosage (mg/kg):</h4>")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number","data-dose":doseNum,
id:"dosage"+doseNum,name:"dosage"+doseNum,
class:"dosage fullWidth watch stockCalc",
"data-watch":"dose"}).on("change",e=>{
this.doses[doseNum]["id"]=$(e.currentTarget).val()
})))).append($("<div></div>",{
class:row+" hideView"}).append($("<div></div>",{
class:col
}).append("Delete:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"button",value:"Delete Dose",
"data-dose":doseNum,id:"deleteDose"+doseNum,
name:"deletedose"+doseNum,
class:"deleteDose fullWidth"}).on("click",e=>{
this.deleteDoseFuncs(e.currentTarget)
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Avg mouse mass (g):")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",val:25,"data-dose":doseNum,
id:"avgMouseMass"+doseNum,
name:"avgmousemass"+doseNum,
class:"avgMouseMass fullWidth watch stockCalc",
"data-watch":"avgMouseMass"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Amount Nutella/mouse:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",val:60,"data-dose":doseNum,
id:"nutellaPerMouse"+doseNum,
name:"nutellapermouse"+doseNum,
class:"nutellaPerMouse fullWidth watch stockCalc",
"data-watch":"nutellaPerMouse"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Measured Nutella (mg):")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number","data-dose":doseNum,
id:"amntNutella"+doseNum,
name:"amntnutella"+doseNum,
class:"amntNutella fullWidth watch stockCalc",
"data-watch":"amntNutella"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Stock per mouse:")).append($("<div></div>",{
class:"col stockPerMouse","data-dose":doseNum
}))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("# of Nutella doses:")).append($("<div></div>",{
class:"col numMiceDoses","data-dose":doseNum
}))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Stock to add:")).append($("<div></div>",{
class:"col calcedStock","data-dose":doseNum
}))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Mouse mass:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number","data-dose":doseNum,
id:"mouseMass"+doseNum,name:"mousemass"+doseNum,
class:"mouseMass fullWidth watch stockCalc",
"data-watch":"mouseMass"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Nutella for mouse:")).append($("<div></div>",{
class:"col adjNutellaForMouse","data-dose":doseNum
})))))),$(".watch").on("input",e=>{
this.watchValue($(e.currentTarget))
}),$(".stockCalc").on("change",e=>{
this.calcStock($(e.currentTarget).data("dose"))
}),this.resize()},makeMouseCard:function(doseNum){
var doseSearch=this.doseSearch(doseNum),$div=$(".doseCard"+doseSearch).find(".card-body"),row="row mt-2",col="col-12 col-lg-6"
;$div.append($("<div></div>",{
class:"col col-md-6 mt-2 mouseCard",
"data-dose":doseNum,"data-mouse":mouseNum
}).append($("<div></div>",{class:"card"
}).append($("<button></button>",{
class:"card-header mouseHeader",type:"button",
"data-calc":"mouseID","data-dose":doseNum,
"data-mouse":mouseNum}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append("Mouse "+mouseNum)).append($("<div></div>",{
class:"card-body"}).append($("<div></div>",{
class:row}).append($("<div></div>",{class:col
}).append("<h4>Dosage (mg/kg):</h4>")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number","data-dose":doseNum,
id:"dosage"+doseNum,name:"dosage"+doseNum,
class:"dosage fullWidth watch stockCalc",
"data-watch":"dose"}).on("change",e=>{
this.doses[doseNum]["id"]=$(e.currentTarget).val()
})))).append($("<div></div>",{
class:row+" hideView"}).append($("<div></div>",{
class:col
}).append("Delete:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"button",value:"Delete Dose",
"data-dose":doseNum,id:"deleteDose"+doseNum,
name:"deletedose"+doseNum,
class:"deleteDose fullWidth"}).on("click",e=>{
this.deleteDoseFuncs(e.currentTarget)
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Avg mouse mass (g):")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",val:25,"data-dose":doseNum,
id:"avgMouseMass"+doseNum,
name:"avgmousemass"+doseNum,
class:"avgMouseMass fullWidth watch stockCalc",
"data-watch":"avgMouseMass"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Amount Nutella/mouse:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",val:60,"data-dose":doseNum,
id:"nutellaPerMouse"+doseNum,
name:"nutellapermouse"+doseNum,
class:"nutellaPerMouse fullWidth watch stockCalc",
"data-watch":"nutellaPerMouse"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Measured Nutella (mg):")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number","data-dose":doseNum,
id:"amntNutella"+doseNum,
name:"amntnutella"+doseNum,
class:"amntNutella fullWidth watch stockCalc",
"data-watch":"amntNutella"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Stock per mouse:")).append($("<div></div>",{
class:"col stockPerMouse","data-dose":doseNum
}))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("# of Nutella doses:")).append($("<div></div>",{
class:"col numMiceDoses","data-dose":doseNum
}))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Stock to add:")).append($("<div></div>",{
class:"col calcedStock","data-dose":doseNum
}))).append($("<div></div>",{class:row+" hideView"
}).append($("<div></div>",{class:col
}).append("Add mouse:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"button",value:"Add Mouse",
"data-dose":doseNum,id:"addMouseDose"+doseNum,
name:"addMouseDose"+doseNum,
class:"addMouseDose fullWidth"}).on("click",e=>{
this.addMouseCard(e.currentTarget)
}))))))),$(".watch").on("input",e=>{
this.watchValue($(e.currentTarget))
}),$(".stockCalc").on("change",e=>{
this.calcStock($(e.currentTarget).data("dose"))
}),this.resize()},makeVehCard:function(){
var $div=$("#vehCards");$div.html("")
;var row="row mt-2",col="col-12 col-lg-6"
;$div.append($("<div></div>",{
class:"col col-md-6 mt-2 vehCard"
}).append($("<div></div>",{class:"card"
}).append($("<button></button>",{
class:"card-header vehHeader",type:"button"
}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append("Vehicle")).append($("<div></div>",{
class:"card-body"}).append($("<div></div>",{
class:row}).append($("<div></div>",{class:col
}).append("<h4>Volume (&micro;L/Nutella dose):</h4>")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",id:"vehVol",name:"vehvol",
class:"vehVol fullWidth watch vehCalc",
"data-watch":"veh"})))).append($("<div></div>",{
class:row}).append($("<div></div>",{class:col
}).append("Amount Nutella/mouse:")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",val:60,id:"nutellaPerMouseVeh",
name:"nutellapermouseveh",
class:"nutellaPerMouseVeh fullWidth watch vehCalc",
"data-watch":"nutellaPerMouseVeh"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Measured Nutella (mg):")).append($("<div></div>",{
class:"col"}).append($("<input></input>",{
type:"number",id:"amntNutellaVeh",
name:"amntnutellaveh",
class:"amntNutellaVeh fullWidth watch vehCalc",
"data-watch":"amntNutellaVeh"
})))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("# of Nutella doses:")).append($("<div></div>",{
class:"col numMiceDosesVeh"
}))).append($("<div></div>",{class:row
}).append($("<div></div>",{class:col
}).append("Vehicle to add:")).append($("<div></div>",{
class:"col calcedVehicle"
})))))),$(".watch").on("input",e=>{
this.watchValue($(e.currentTarget))
}),$(".vehCalc").on("change",e=>{
this.calcVehicle()}),this.resize()},
deleteDoseFuncs:function(el){
var doseNum=$(el).data("dose")
;console.log($(el),doseNum),this.runIfConfirmed("Are you sure that you wish to delete this dose?",()=>{
var index=this.doseNums.indexOf(doseNum)
;if(index>-1)this.doseNums.splice(index,1)
;delete this.doses[doseNum]
;var doseSearch=this.doseSearch(doseNum)
;$(doseSearch).remove()},el),this.resize()}};