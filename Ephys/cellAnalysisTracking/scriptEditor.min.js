my_widget_script={init:function(mode,json_data){
var parsedJson=this.parseInitJson(json_data)
;this.initDynamicContent(parsedJson),
window.onresize=(()=>this.resize()),this.addEventListeners(),
this.parent_class.init(mode,()=>JSON.stringify(parsedJson.widgetData)),
this.addRequiredFieldIndicators(),
this.setUpInitialState(),this.adjustForMode(mode),
this.resetFilter()},to_json:function(){
var widgetJsonString=this.parent_class.to_json(),dynamicContent=this.getDynamicContent(),output={
widgetData:JSON.parse(widgetJsonString),
cellNums:this.cellNums,cells:this.cells}
;return JSON.stringify(output)},
from_json:function(json_data){
var parsedJson=JSON.parse(json_data)
;this.parent_class.from_json(JSON.stringify(parsedJson.widgetData))
},test_data:function(){
var testData=JSON.parse(this.parent_class.test_data()),output={
widgetData:testData,cellNums:[1,2,3,4,5,6,7],
cells:{1:{id:"20220227a"},2:{id:"20220227b"},3:{
id:"20220227c"},4:{id:"20220227d"},5:{
id:"20220227e"},6:{id:"20220227f"},7:{
id:"20220227g"}}};return JSON.stringify(output)},
is_valid:function(b_suppress_message){
var fail=false,fail_log="",name
;if($("#the_form").find("select, textarea, input").each((i,e)=>{
if(!$(e).prop("required"));else if(!$(e).val())fail=true,
name=$(e).attr("id"),fail_log+=name+" is required \n"
}),$("input[type='date']").each((i,e)=>{
var date=$(e).val();if(date){
var validDate=this.isValidDate(date)
;if(!validDate)fail=true,fail_log+="Please enter valid date in form 'YYYY-MM-DD'"
}}),$("input[type='time']").each((i,e)=>{
var time=$(e).val();if(time){
var validtime=this.isValidTime(time)
;if(!validtime)fail=true,fail_log+="Please enter valid time in form 'hh:mm' - 24 hr time"
}}),fail)return bootbox.alert(fail_log);else{
var noErrors=[];return noErrors}},
is_edited:function(){
return this.parent_class.is_edited()},
reset_edited:function(){
return this.parent_class.reset_edited()},
parseInitJson:function(json_data){var jsonString
;if("string"===typeof json_data)jsonString=json_data;else jsonString=json_data()
;var parsedJson=JSON.parse(jsonString)
;return parsedJson},
initDynamicContent:function(parsedJson){
if(parsedJson.cells)this.cells=parsedJson.cells;else this.cells={}
;if(parsedJson.cellNums)for(var i=0;i<parsedJson.cellNums.length;i++)cell=parsedJson.cellNums[i],
this.cellNums.push(cell),
this.makeCellCard(cell);else this.cellNums=[]},
adjustForMode:function(mode){
if("edit"!==mode&&"edit_dev"!==mode)$(".disableOnView").prop("disabled",true),
$(".hideView").hide(),
$("input[type='date']").removeClass(".hasDatePicker"),$(".filter").prop("readonly","").prop("disabled",""),
$(".filter").find("option").prop("disabled","");else $("input[type='date']").each((i,e)=>{
this.checkDateFormat($(e))
}),$("input[type='time']").each((i,e)=>{
this.checkTimeFormat($(e))})},
addEventListeners:function(){
$(".toggleTable").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),$table=$("#"+tableID)
;this.toggleTableFuncs($table)
}),$(".toCSV").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),dateToday=luxon.DateTime.now().toISODate(),fileName="table_"+tableID+"_"+dateToday,$errorMsg=$("#errorMsg")
;this.toCSVFuncs(fileName,tableID,$errorMsg)
}),$(".copyData").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),tableSearch=this.tableSearch(tableID),$copyHead=$(".copyHead"+tableSearch),$transpose=$(".transpose"+tableSearch),$tableToCopy=$("#"+tableID),$tableDiv=$tableToCopy.parent(),$errorMsg=$("#errorMsg"),$divForCopy=$("#forCopy")
;this.copyDataFuncs($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose)
})},addRequiredFieldIndicators:function(){
$(".needForTableLab").each((i,e)=>{
$(e).html("<span style='color:blue'>#</span>"+$(e).html())
}),$(".requiredLab").each((i,e)=>{
$(e).html("<span style='color:red'>*</span>"+$(e).html())
})},isValidTime:function(timeString){
var regEx="^(((([0-1][0-9])|(2[0-3])):[0-5][0-9]))$"
;if(!timeString.match(regEx))return false;else return true
},isTimeSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","time")
;var supported=true
;if("time"!==input.type)supported=false
;return this.timeSupported=supported,supported},
timeSupported:true,
checkTimeFormat:function($timeInput){
if(!this.timeSupported){
$timeInput.next(".timeWarning").remove()
;var time=$timeInput.val(),isValid=this.isValidTime(time)
;if(!isValid)$timeInput.after('<div class="text-danger timeWarning">Enter time as "hh:mm" in 24-hr format</div>')
}},isValidDate:function(dateString){
var regEx=/^\d{4}-\d{2}-\d{2}$/
;if(!dateString.match(regEx))return false
;var d=new Date(dateString),dNum=d.getTime()
;if(!dNum&&0!==dNum)return false
;return d.toISOString().slice(0,10)===dateString},
isDateSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","date")
;var supported=true
;if("date"!==input.type)supported=false
;return this.dateSupported=supported,supported},
dateSupported:true,
checkDateFormat:function($dateInput){
if(!this.dateSupported){
$dateInput.next(".dateWarning").remove()
;var date=$dateInput.val(),isValid=this.isValidDate(date)
;if(!isValid)$dateInput.after('<div class="text-danger dateWarning">Enter date as "YYYY-MM-DD"</div>')
;$dateInput.datepicker({dateFormat:"yy-mm-dd"
}),console.log($dateInput.val())}},
setUpInitialState:function(){
this.isDateSupported(),this.isTimeSupported(),$("input[type='date']").prop("placeholder","YYYY-MM-DD").on("change",e=>{
this.checkDateFormat($(e.currentTarget))
}).each((i,e)=>{this.checkDateFormat($(e))
}),$("input[type='time']").prop("placeholder","hh:mm").on("change",e=>{
this.checkTimeFormat($(e.currentTarget))
}).each((i,e)=>{this.checkTimeFormat($(e))
}),$(".myLeftCol").addClass("col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"),
$("textarea.autoAdjust").each((i,e)=>{
e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}).on("input",e=>{
e.currentTarget.style.height="auto",e.currentTarget.style.height=e.currentTarget.scrollHeight+"px",
this.resize()}),$(".watchTime").each((i,e)=>{
this.watchTimeNextEl($(e))}).on("input",e=>{
this.watchTimeNextEl($(e.currentTarget))
}),$(".addCell").on("click",e=>{
if(this.cellNums.length>0)var lastCell=this.cellNums[this.cellNums.length-1],cellNum=lastCell+1;else var cellNum=1
;var inArray=this.checkInArray(cellNum,this.cellNums)
;if(!inArray)this.cellNums.push(cellNum),
this.cells[cellNum]={},this.makeCellCard(cellNum)
}),$(".filter").on("input",e=>{this.filterData()
}),$("#resetFilter").on("click",e=>{
this.resetFilter()}),$(".watch").each((i,e)=>{
this.watchValue($(e))
}),$("input.extractedTime").each((i,e)=>{
this.watchTimeNextEl($(e))
}),$(".cellHeader").each((i,e)=>{
this.toggleCard($(e))
}),this.updateAllExclusion(),this.resize()},
cellNums:[],cells:{},
watchTimeNextEl:function($elToWatch){
var $elToFill=$elToWatch.next($(".fillTime"))
;this.watchTime($elToWatch,$elToFill)},
resize:function(){
this.parent_class.resize_container()},
getDynamicContent:function(){var dynamicContent={}
;return dynamicContent},
data_valid_form:function($errorMsg){
var valid=true,fail_log=$("<div></div>").append("Missing values for:"),name
;if($(".needForTable").each((i,e)=>{
if(!$(e).val())valid=false,name=$(e).attr("id"),
fail_log.append("<br/>"+name)
}),!valid)$errorMsg.html("<span style='color:red; font-size:36px;'>"+"Please fill out all elements marked by a"+"</span><span style='color:blue; font-size:36px;'>"+" blue #"+"</span>"),
$errorMsg.append(fail_log);else $errorMsg.html("")
;return this.resize(),valid},
getHoursMin:function(timeString){
timeString=timeString.split(":")
;var hours=parseInt(timeString[0],10),mins=parseInt(timeString[1],10)
;return split={hours:hours,mins:mins}},
watchTime:function($elToWatch,$elToFill){
var addTime=$elToFill.data("time"),startTime=$elToWatch.val()
;if(startTime){var time=new Date
;startTimeSplit=this.getHoursMin(startTime),addTimeSplit=this.getHoursMin(addTime),
time.setHours(startTimeSplit.hours,startTimeSplit.mins,0,0),
time.setHours(time.getHours()+addTimeSplit.hours),
time.setMinutes(time.getMinutes()+addTimeSplit.mins),
$elToFill.text(time.toLocaleTimeString())
}else $elToFill.text("{Enter Start Time}")
;this.resize()},toggleCard:function($cardHead){
$cardHead.next().toggleClass("collapse"),
$cardHead.next().find("textarea.autoAdjust").each((i,e)=>{
if(!$(e).is(":hidden"))e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}),this.resize()},
makeCard:function($div,cardHeadContent,cardBodyContent){
$div.append($("<div/>",{class:"card"
}).append($("<button></button>",{type:"button",
class:"card-header"}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append(cardHeadContent)).append($("<div/>",{
class:"card-body collapse"
}).append(cardBodyContent))),this.resize()},
dataSearch:function(dataName,dataValue){
var dataSearch="[data-"+dataName+"='"+dataValue+"']"
;return dataSearch},calcSearch:function(calc){
var calcSearch=this.dataSearch("calc",calc)
;return calcSearch},cellSearch:function(cell){
var cellSearch=this.dataSearch("cell",cell)
;return cellSearch},tableSearch:function(table){
var tableSearch=this.dataSearch("table",table)
;return tableSearch},watchSearch:function(watch){
var watchSearch=this.dataSearch("watch",watch)
;return watchSearch},watchValue:function($el){
var watch=$el.data("watch"),calcSearch=this.calcSearch(watch),dayNum=$el.data("day"),cellNum=$el.data("cell"),val=$el.val()
;if(dayNum)calcSearch+=this.daySearch(dayNum)
;if(cellNum)calcSearch+=this.cellSearch(cellNum)
;if("cell"==watch)if(!val)val="Cell "+cellNum
;if($(calcSearch).html(val),cellNum)this.updateExclusion(cellNum)
;this.resize()},updateAllExclusion:function(){
for(var cells=this.cellNums,numCells=cells.length,i=0;i<numCells;i++){
var thisCell=cells[i]
;my_widget_script.updateExclusion(thisCell)}},
updateExclusion:function(cellNum){
var calcSearch=this.calcSearch("excludeCell"),cellSearch=this.cellSearch(cellNum),exclude=false,acqData=$(".acqData"+cellSearch).val(),passive=$(".passives"+cellSearch).val(),includeCell=$(".incCell"+cellSearch).val()
;if("no"==acqData||"no"==passive||"no"==includeCell)exclude=true
;if($(calcSearch+cellSearch).text(exclude),
exclude)this.findCellRow(cellNum).css("background-color","lightpink");else this.findCellRow(cellNum).css("background-color","white")
},checkInArray:function(searchVal,array){
var inArray=-1!==$.inArray(searchVal,array)
;return inArray},checkDateKeyPress:function($el){
if($el.off("change blur"),$el.on("blur",e=>{
this.checkDateFormat($el),$el.off("blur"),
$el.on("change",e=>{this.checkDateFormat($el)})
}),13===event.keyCode)this.checkDateFormat($el)},
checkTimeKeyPress:function($el){
if($el.off("change blur"),$el.on("blur",e=>{
this.checkTimeFormat($el),$el.off("blur"),
$el.on("change",e=>{this.checkTimeFormat($el)})
}),13===event.keyCode)this.checkTimeFormat($el)},
makeCellCard:function(cellNum){
var $div=$(".cellInfo")
;if(!$div.find(".card").length)$div.html("")
;var row="row mt-2",col="col-12 col-lg-6",acqDataRow=this.makeCheckRow(row,col,"Acquired data:","acqData",cellNum),passiveDateRow=this.makeDateRow(row,col,"Checked passives:","checkPass",cellNum),passivesRow=this.makeCheckRow(row,col,"Passes passives:","passives",cellNum),evDetectDateRow=this.makeDateRow(row,col,"Date of event detection:","evDetect",cellNum),evConfirmDateRow=this.makeDateRow(row,col,"Date of event confirmation:","evConfirm",cellNum),incCellRow=this.makeCheckRow(row,col,"Include Cell:","incCell",cellNum)
;$div.append($("<div/>",{
class:"col col-md-6 mt-2 cellCard",
"data-cell":cellNum}).append($("<div/>",{
class:"card"}).append($("<button></button>",{
class:"card-header cellHeader",type:"button",
"data-calc":"cell","data-cell":cellNum
}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append("Cell "+cellNum)).append($("<div/>",{
class:"card-body"}).append($("<div/>",{class:row
}).append($("<div/>",{class:col
}).append("<h4>Cell ID:</h4>")).append($("<div/>",{
class:"col"}).append($("<input/>",{type:"text",
"data-cell":cellNum,id:"cellID"+cellNum,
name:"cellid"+cellNum,
class:"cellID fullWidth watch","data-watch":"cell"
}).on("change",e=>{
this.cells[cellNum]["id"]=$(e.currentTarget).val()
})))).append($("<div/>",{class:row+" hideView"
}).append($("<div/>",{class:col
}).append("Delete:")).append($("<div/>",{
class:"col"}).append($("<input/>",{type:"button",
value:"Delete Cell","data-cell":cellNum,
id:"deleteCell"+cellNum,name:"deletecell"+cellNum,
class:"deleteCell fullWidth"}).on("click",e=>{
this.deleteCellFuncs($(e.currentTarget).data("cell"))
})))).append(acqDataRow).append(passiveDateRow).append(passivesRow).append(evDetectDateRow).append(evConfirmDateRow).append(incCellRow).append($("<div/>",{
class:row}).append($("<div/>",{class:col
}).append("Series to include:")).append($("<div/>",{
class:"col"
}).append($("<text"+"area></text"+"area>",{
"data-cell":cellNum,id:"incNotes"+cellNum,
name:"incnotes"+cellNum,rows:1,
class:"incNotes fullWidth autoAdjust"
}).on("input",e=>{
e.currentTarget.style.height="auto",e.currentTarget.style.height=e.currentTarget.scrollHeight+"px",
this.resize()})))).append($("<div/>",{class:row
}).append($("<div/>",{class:"col"
}).append($("<text"+"area></text"+"area>",{
"data-cell":cellNum,id:"notes"+cellNum,
name:"notes"+cellNum,rows:1,
class:"notes fullWidth autoAdjust"
}).on("input",e=>{
e.currentTarget.style.height="auto",e.currentTarget.style.height=e.currentTarget.scrollHeight+"px",
this.resize()})))))))
;var $cellTable=$("#cellTable"),$cellTableBody=$cellTable.find("tbody")
;$cellTableBody.append($("<tr/>",{
"data-cell":cellNum}))
;var $thisRow=$cellTableBody.find(this.cellSearch(cellNum)),cells=["cell","acqData","checkPassDate","passives","evDetectDate","evConfirmDate","incCell","excludeCell"]
;for(i in cells){
var cell=cells[i],$el=this.makeDataCell(cell,cellNum)
;$thisRow.append($el)}$(".watch").on("input",e=>{
this.watchValue($(e.currentTarget))
}),$("input[type='date']").each((i,e)=>{
this.checkDateFormat($(e))}).on("input",e=>{
this.checkDateFormat($(e.currentTarget))
}),$("input[type='time']").each((i,e)=>{
this.checkTimeFormat($(e))}).on("input",e=>{
this.checkTimeFormat($(e.currentTarget))
}),this.resize()},
makeCheckRow:function(row,col,label,className,cellNum){
var lowerCaseName=className.toLowerCase(),$row=$("<div></div>",{
class:row}).append($("<div></div>",{class:col
}).append(label)).append($("<div></div>",{
class:"col"}).append($("<select></select>",{
"data-cell":cellNum,id:className+"Check"+cellNum,
name:lowerCaseName+"check"+cellNum,
class:className+" fullWidth watch",
"data-watch":className
}).append("<option value=''>Select</option><option value='yes'>Yes</option><option value='no'>No</option><option value='unsure'>Unsure</option><option value='NA'>N/A</option>")))
;return $row},
makeDateRow:function(row,col,label,className,cellNum){
var lowerCaseName=className.toLowerCase(),$row=$("<div/>",{
class:row}).append($("<div/>",{class:col
}).append(label)).append($("<div/>",{class:"col"
}).append($("<input/>",{type:"date",
"data-cell":cellNum,id:className+"Date"+cellNum,
name:lowerCaseName+"date"+cellNum,
class:className+"Date fullWidth watch",
"data-watch":className+"Date"})));return $row},
makeTimeRow:function(row,col,label,className,cellNum){
var lowerCaseName=className.toLowerCase(),$row=$("<div/>",{
class:row}).append($("<div/>",{class:col
}).append(label)).append($("<div/>",{class:"col"
}).append($("<input/>",{type:"time",
"data-cell":cellNum,id:className+"Time"+cellNum,
name:lowerCaseName+"time"+cellNum,
class:className+"Time fullWidth watch",
"data-watch":className+"Time"})));return $row},
makeDataCell:function(className,cellNum){
var $cell=$("<td/>",{"data-calc":className,
"data-cell":cellNum,class:className});return $cell
},deleteCellFuncs:function(cellNum){
var proceed=confirm("Are you sure that you wish to delete this cell?")
;if(proceed){
var index=this.cellNums.indexOf(cellNum)
;if(index>-1)this.cellNums.splice(index,1)
;delete this.cells[cellNum]
;var cellSearch=this.cellSearch(cellNum)
;$(cellSearch).remove()}this.resize()},
resetFilter:function(){
this.resetFilterSelections(),this.filterData()},
resetFilterSelections:function(){
$("#nameFilter").val(""),$("#acqDataFilter").val("yes"),
$("#checkPassFilter").val("either"),
$("#passiveFilter").find("option").prop("selected",false),
$("#evDetectFilter").val("either"),
$("#evConfirmFilter").val("either"),$("#includeFilter").find("option").prop("selected",false)
},filterData:function(){
for(var cells=this.cellNums,numCells=cells.length,nameFilter=$("#nameFilter").val(),acqDataFilter=$("#acqDataFilter").val(),checkPassFilter=$("#checkPassFilter").val(),passiveFilter=$("#passiveFilter").val(),evDetectFilter=$("#evDetectFilter").val(),evConfirmFilter=$("#evConfirmFilter").val(),includeFilter=$("#includeFilter").val(),keepCell,i=0;i<numCells;i++){
var thisCell=cells[i],keepCell=false
;if(this.matchesName(thisCell,nameFilter))if(this.matchesFilter(thisCell,"acqData",acqDataFilter))if(this.matchesDate(thisCell,"checkPassDate",checkPassFilter))if(this.matchesFilter(thisCell,"passives",passiveFilter))if(this.matchesDate(thisCell,"evDetectDate",evDetectFilter))if(this.matchesDate(thisCell,"evConfirmDate",evConfirmFilter))if(this.matchesFilter(thisCell,"incCell",includeFilter))keepCell=true
;if(keepCell)this.findCellCard(thisCell).show(),
this.findCellRow(thisCell).show();else this.findCellCard(thisCell).hide(),
this.findCellRow(thisCell).hide()}this.resize()},
findCellCard:function(cellNum){
var cellSearch=this.cellSearch(cellNum),$cellCard=$(".cellCard"+cellSearch)
;return $cellCard},findCellRow:function(cellNum){
var cellSearch=this.cellSearch(cellNum),$row=$("tr"+cellSearch)
;return $row},
matchesFilter:function(cellNum,watchName,matchArray){
var matches=false;if(matchArray){
var cellSearch=this.cellSearch(cellNum),watchSearch=this.watchSearch(watchName),$el=$(watchSearch+cellSearch),thisVal=$el.val()
;if(!thisVal)thisVal=""
;var matches=this.checkInArray(thisVal,matchArray)
}else matches=true;return matches},
matchesName:function(cellNum,matchString){
var matches=false;if(matchString){
var cellSearch=this.cellSearch(cellNum),watchSearch=this.watchSearch("cell"),$el=$(watchSearch+cellSearch),thisVal=$el.val()
;if(thisVal){
if(matchArray=thisVal.match(matchString),matchArray)matches=true
}else if(matchArray="".match(matchString),
matchArray)matches=true}else matches=true
;return matches},
matchesDate:function(cellNum,watchName,dateType){
var matches=false
;if("either"==dateType)matches=true;else{
var cellSearch=this.cellSearch(cellNum),watchSearch=this.watchSearch(watchName),$el=$(watchSearch+cellSearch)
;console.log($el)
;var thisVal=$el.val(),thisDateType="invalid"
;if(thisVal)if(this.isValidDate(thisVal))thisDateType="valid"
;if(dateType==thisDateType)matches=true}
return matches},
downloadCSV:function(csv,filename){
var csvFile,downloadLink;csvFile=new Blob([csv],{
type:"text/csv"
}),downloadLink=document.createElement("a"),downloadLink.download=filename,
downloadLink.href=window.URL.createObjectURL(csvFile),
downloadLink.style.display="none",
document.body.appendChild(downloadLink),downloadLink.click()
},exportTableToCSV:function(filename,table){
for(var csv=[],datatable=document.getElementById(table),rows=datatable.querySelectorAll("tr"),i=0;i<rows.length;i++){
for(var row=[],cols=rows[i].querySelectorAll("td, th"),j=0;j<cols.length;j++){
var cellText='"'+cols[j].innerText+'"'
;row.push(cellText)}csv.push(row.join(","))}
this.downloadCSV(csv.join("\n"),filename)},
copyTable:function($table,copyHead,$divForCopy,transpose){
var $temp=$("<text"+"area style='opacity:0;'></text"+"area>"),rows=[],rowNum=0
;if(copyHead)$table.find("thead").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;$table.find("tbody").children("tr").not(":hidden").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;for(var i=0;i<rows.length;i++)rows[i]=rows[i].join("\t")
;$temp.append(rows.join("\n")),
$temp.appendTo($divForCopy).select(),document.execCommand("copy"),
$temp.remove()},toggleTableFuncs:function($table){
this.data_valid_form(),$table.toggle(),
this.resize()},
toCSVFuncs:function(fileName,tableID,$errorMsg){
var data_valid=this.data_valid_form($errorMsg)
;if(data_valid)this.exportTableToCSV(fileName,tableID),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Saved successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Did not export</span>")
},
copyDataFuncs:function($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose){
var data_valid=this.data_valid_form($errorMsg),copyHead=false,transpose=false
;if($copyHead.is(":checked"))copyHead=true
;if($transpose.is(":checked"))transpose=true
;if(data_valid)$tableDiv.show(),this.resize(),
this.copyTable($tableToCopy,copyHead,$divForCopy,transpose),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Copied successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Nothing was copied</span>")
}};